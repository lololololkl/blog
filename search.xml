<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>1 RecyclerView</title>
    <url>/2021/07/20/Android/1%20RecyclerView/</url>
    <content><![CDATA[
        <h1 id="1-RecyclerView"   >
          <a href="#1-RecyclerView" class="heading-link"><i class="fas fa-link"></i></a><a href="#1-RecyclerView" class="headerlink" title="1 RecyclerView"></a>1 RecyclerView</h1>
      
        <h3 id="RecyclerView"   >
          <a href="#RecyclerView" class="heading-link"><i class="fas fa-link"></i></a><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h3>
      <ul>
<li><p>调用</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">RecyclerView recyclerView = findViewById(R.id.recycler_view);</span><br><span class="line">LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></div></figure>

<ul>
<li>控件<ul>
<li>id: recycler_view<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">&quot;@+id/recycler_view&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br></pre></td></tr></table></div></figure></li>
<li>id: fruit_name, fruit_image<span id="more"></span></li>
</ul>
</li>
</ul>
</li>
<li><p>适配器 Adapter</p>
<ul>
<li><p>定义式</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>创建内部类 ViewHolder</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">    ImageView fruitImage;</span><br><span class="line">    TextView fruitName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View view)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(view);</span><br><span class="line">        fruitName = (TextView)view.findViewById(R.id.fruit_name);</span><br><span class="line">        fruitImage = (ImageView)view.findViewById(R.id.fruit_image);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>构造方法 FruitAdapter（接收数据源）</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; fruitList)</span></span>&#123;</span><br><span class="line">    mFruitList = fruitList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>mFruitList: </p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;Fruit&gt; mFruitList;</span><br></pre></td></tr></table></div></figure></li>
<li><p>必须继承的方法<br><code>onCreateViewHolder()</code><br><code>onBindViewHolder()</code><br><code>getItemCount()</code></p>
<ul>
<li>onCreateViewHolder() 创建ViewHolder实例<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//加载fruit_item布局</span></span><br><span class="line">  View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">  <span class="comment">//将布局传入ViewHolder</span></span><br><span class="line">  ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">  <span class="comment">//返回ViewHolder实例</span></span><br><span class="line">  <span class="keyword">return</span> holder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>onBindViewHolder()<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">  <span class="comment">//通过当前项获得Fruit实例</span></span><br><span class="line">    Fruit fruit = mFruitList.get(position);</span><br><span class="line">    <span class="comment">//将数据设置到ViewHolder的ImageView和TextView中</span></span><br><span class="line">    holder.fruitImage.setImageResource(fruit.getImageId());</span><br><span class="line">    holder.fruitName.setText(fruit.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<blockquote>
<p>用于对RecyclerView子项的数赋值，每个子项滚动到屏幕的时候执行</p>
</blockquote>
</li>
<li>getItemCount()<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//返回数据源长度</span></span><br><span class="line">  <span class="keyword">return</span> mFruitList.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl"><a class="exturl__link"   href="https://hexo.io/" >Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/" >documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link"   href="https://github.com/hexojs/hexo/issues" >GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p>

        <h2 id="Quick-Start"   >
          <a href="#Quick-Start" class="heading-link"><i class="fas fa-link"></i></a><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>
      
        <h3 id="Create-a-new-post"   >
          <a href="#Create-a-new-post" class="heading-link"><i class="fas fa-link"></i></a><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/writing.html" >Writing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="Run-server"   >
          <a href="#Run-server" class="heading-link"><i class="fas fa-link"></i></a><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/server.html" >Server</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="Generate-static-files"   >
          <a href="#Generate-static-files" class="heading-link"><i class="fas fa-link"></i></a><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/generating.html" >Generating</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="Deploy-to-remote-sites"   >
          <a href="#Deploy-to-remote-sites" class="heading-link"><i class="fas fa-link"></i></a><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>0 Activity的类文件</title>
    <url>/2021/07/20/Android/0%20Activity%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[
        <h4 id="0-Activity的类文件"   >
          <a href="#0-Activity的类文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#0-Activity的类文件" class="headerlink" title="0 Activity的类文件"></a>0 Activity的类文件</h4>
      
        <h5 id="活动"   >
          <a href="#活动" class="heading-link"><i class="fas fa-link"></i></a><a href="#活动" class="headerlink" title="活动"></a>活动</h5>
      <ul>
<li><p>实例</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    Button button = (Button)findViewById(R.id.button);</span><br><span class="line">    button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;You click the button&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                finish(); <span class="comment">// 销毁一个活动</span></span><br><span class="line">            sendMessage(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>创建一个Button对象实例</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button button = (Button)findViewById(R.id.button);</span><br></pre></td></tr></table></div></figure>
<span id="more"></span>

<p><code>findViewById()</code>获取布局中的元素</p>
</li>
<li><p>监听器</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener()</span><br></pre></td></tr></table></div></figure>

<ul>
<li>点击按钮将执行监听器中的 OnClick() 方法</li>
<li>将 Toast 显示出来， Toast 的 makeText() 静态方法</li>
</ul>
</li>
<li><p>显式调用 Intent</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line"><span class="comment">//        调用显示Intent</span></span><br><span class="line">      Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, DisplayMessageActivity.class);</span><br><span class="line">      EditText editText = findViewById(R.id.editText);</span><br><span class="line">      String message = editText.getText().toString();</span><br><span class="line">      intent.putExtra(EXTRA_MESSAGE, message);</span><br><span class="line">      startActivity(intent);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure>
<ul>
<li>取出数据<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> getIntent();</span><br><span class="line">String data = intent.getStringExtra(EXTRA_MESSAGE);</span><br></pre></td></tr></table></div></figure></li>
</ul>
</li>
<li><p>给当前活动创建菜单</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">    getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.onCreateOptionsMenu(menu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>返回True表示允许创建的菜单显示出来</p>
</li>
<li><p>菜单响应事件</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(<span class="meta">@NonNull</span> MenuItem item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.add_item:</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;You clicked Add&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> R.id.remove_item:</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;You clicked Remove&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>


        <h5 id="活动的生命周期"   >
          <a href="#活动的生命周期" class="heading-link"><i class="fas fa-link"></i></a><a href="#活动的生命周期" class="headerlink" title="活动的生命周期"></a>活动的生命周期</h5>
      
        <h5 id="活动的启动模式"   >
          <a href="#活动的启动模式" class="heading-link"><i class="fas fa-link"></i></a><a href="#活动的启动模式" class="headerlink" title="活动的启动模式"></a>活动的启动模式</h5>
      
        <h4 id="xml文件"   >
          <a href="#xml文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#xml文件" class="headerlink" title="xml文件"></a>xml文件</h4>
      
        <h5 id="控件"   >
          <a href="#控件" class="heading-link"><i class="fas fa-link"></i></a><a href="#控件" class="headerlink" title="控件"></a>控件</h5>
      </li>
</ul>
<ol>
<li><p>TextView</p>
</li>
<li><p>Button</p>
</li>
<li><p>EditText</p>
</li>
<li><p>ImageView</p>
</li>
<li><p>ProgressBar</p>
</li>
<li><p>AlertDialog</p>
</li>
<li><p>ProgressDialog</p>

        <h5 id="基本布局"   >
          <a href="#基本布局" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本布局" class="headerlink" title="基本布局"></a>基本布局</h5>
      <ul>
<li>线性布局 LinearLayout</li>
</ul>
<figure class="highlight h"><div class="table-container"><table><tr><td class="code"><pre><span class="line">排列方向：android:orientation=<span class="string">&quot;horizonal&quot;</span> 或 vertical</span><br><span class="line">长宽：android:layout_width=<span class="string">&quot;wrap_content&quot;</span>,</span><br><span class="line"> android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">对齐方式：gravity指定文字在控件中的对齐方式，</span><br><span class="line">     layout_gravity指定控件在布局中的对齐方式</span><br><span class="line">layout_weight使用比例的方式指定空间大小</span><br></pre></td></tr></table></div></figure>

<ul>
<li>相对布局 RelativeLayout<br>layout_alignParentLeft…layout_centerInparent, layout_above…layout_toRightOf, layout_alignLeft…leyout_alignButtom</li>
</ul>
</li>
<li><p>帧布局 FrameLayout</p>
</li>
<li><p>百分比布局 PercentFrameLayout<br>layout_widthPercent, layout_heightPercent</p>

        <h5 id="创建自定义布局"   >
          <a href="#创建自定义布局" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建自定义布局" class="headerlink" title="创建自定义布局"></a>创建自定义布局</h5>
      </li>
</ol>
<ul>
<li><p>引入布局<br>创建Title.xml， 引入布局：<br><code>&lt;include layout=&quot;@layout/title&quot; /&gt;</code><br>将系统还自带的标题栏隐藏：</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">ActionBar actionBar = getSuportActionBar();</span><br><span class="line"><span class="keyword">if</span>(actionBar != Null)&#123;</span><br><span class="line">actionBar.hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>创建自定义控件<br>可以为控件添加功能，如：为按钮添加响应事件<br>新建TitleLayout：</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TitleLayout</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">TitleLayout</span><span class="params">(Context context, AttributeSet attrs)</span></span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(context, attrs);</span><br><span class="line">      LayoutInflater.from(context).inflate(R.layout.title, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<p>在Activity_main.xml中添加代码，引用TitleLayout：</p>
<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.example.uitest.TitleLayout</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--（包名不可省）--&gt;</span></span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h5 id="ListView-控件和-RecyclerView-控件"   >
          <a href="#ListView-控件和-RecyclerView-控件" class="heading-link"><i class="fas fa-link"></i></a><a href="#ListView-控件和-RecyclerView-控件" class="headerlink" title="ListView 控件和 RecyclerView 控件"></a>ListView 控件和 RecyclerView 控件</h5>
      <ul>
<li><p>ListView</p>
<p>添加控件：</p>
<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:id</span>=<span class="string">&quot;@+id/list_view&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>

<p>修改ActivitMain：<br>&emsp;&emsp;适配器：借助适配器传递数组中的数据给ListView。ArrayAdapter通过指定泛型要适配的数据类型，在构造函数中将数据传入，调用setAdapter()将适配器对象传递进去。</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String[] data = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;m&quot;</span>,</span><br><span class="line">        <span class="string">&quot;n&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;q&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;t&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;z&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    ArrayAdapter&lt;String&gt; adapter = <span class="keyword">new</span> ArrayAdapter&lt;String&gt;</span><br><span class="line">    (MainActivity.<span class="keyword">this</span>, android.R.layout.simple_list_item_1, data);</span><br><span class="line">    ListView listView = findViewById(R.id.list_view);</span><br><span class="line">    listView.setAdapter(adapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>定制ListView界面</p>
<ul>
<li><p>新建类Fruit,fruit_itme.xml</p>
</li>
<li><p>创建自定义适配器</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">ArrayAdapter</span>&lt;<span class="title">Fruit</span>&gt; </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> resourceId;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(Context context, <span class="keyword">int</span> textViewResourceId,</span></span></span><br><span class="line"><span class="params"><span class="function">                    List&lt;Fruit&gt; objects)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context, textViewResourceId, objects);</span><br><span class="line">    resourceId = textViewResourceId;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span></span>&#123;</span><br><span class="line">    Fruit fruit = getItem(position);</span><br><span class="line">    View view = LayoutInflater.from(getContext()).inflate(resourceId, parent, <span class="keyword">false</span>);</span><br><span class="line">    ImageView fruitImage = view.findViewById(R.id.fruit_image);</span><br><span class="line">    TextView fruitName = view.findViewById(R.id.fruit_name);</span><br><span class="line">    fruitImage.setImageResource(fruit.getImageId());</span><br><span class="line">    fruitName.setText(fruit.getName());</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">  &#125; <span class="comment">// getView 在每个子项滚动到屏幕内的时候调用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>修改 MainActivity</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    initFruits();</span><br><span class="line">    FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(MainActivity.<span class="keyword">this</span>, R.layout.fruit_item, fruitList);</span><br><span class="line">    ListView listView = findViewById(R.id.list_view);</span><br><span class="line">    listView.setAdapter(adapter);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>提升ListView运行效率</p>
<ul>
<li>修改getView()：convertView布局的缓存<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">View view;</span><br><span class="line"><span class="keyword">if</span>(convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">        view = LayoutInflater.from(getContext()).inflate(resourceId, parent, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    view = convertView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>修改getView()：viewHolder对控件实例的缓存<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">    ImageView fruitImage;</span><br><span class="line">    TextView fruitName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">View view;</span><br><span class="line">ViewHolder viewHolder;</span><br><span class="line"><span class="keyword">if</span>(convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">        view = LayoutInflater.from(getContext()).inflate(resourceId, parent, <span class="keyword">false</span>);</span><br><span class="line">        viewHolder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">        viewHolder.fruitImage = view.findViewById(R.id.fruit_image);</span><br><span class="line">        viewHolder.fruitName = view.findViewById(R.id.fruit_name);</span><br><span class="line">        view.setTag(viewHolder); <span class="comment">//viewHolder存储在view中</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    view = convertView;</span><br><span class="line">    viewHolder = (ViewHolder) view.getTag();</span><br><span class="line">&#125;</span><br><span class="line">viewHolder.fruitImage.setImageResource(fruit.getImageId());</span><br><span class="line">viewHolder.fruitName.setText(fruit.getName());</span><br><span class="line"><span class="keyword">return</span> view;</span><br></pre></td></tr></table></div></figure></li>
<li>ListView 点击事件<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">listView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.OnItemClickListener()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt;parent, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">          Fruit fruit = fruitList.get(position);</span><br><span class="line">          Toast.makeText(MainActivity.<span class="keyword">this</span>, fruit.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></div></figure></li>
</ul>
</li>
</ul>
</li>
<li><p>RecyclerView</p>
<ul>
<li>FruitAdapter文件<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> List&lt;Fruit&gt; mFruitList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">      ImageView fruitImage;</span><br><span class="line">      TextView fruitName;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View view)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">super</span>(view);</span><br><span class="line">          fruitName = (TextView)view.findViewById(R.id.fruit_name);</span><br><span class="line">          fruitImage = (ImageView)view.findViewById(R.id.fruit_image);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; fruitList)</span></span>&#123;</span><br><span class="line">      mFruitList = fruitList;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@NonNull</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">      View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">      ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">      <span class="keyword">return</span> holder;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">      Fruit fruit = mFruitList.get(position);</span><br><span class="line">      holder.fruitImage.setImageResource(fruit.getImageId());</span><br><span class="line">      holder.fruitName.setText(fruit.getName());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mFruitList.size();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></div></figure></li>
<li>MainActivity文件<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    initFruits();</span><br><span class="line">    RecyclerView recyclerView = findViewById(R.id.recycler_view);</span><br><span class="line">    LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>);</span><br><span class="line">    recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">    FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">    recyclerView.setAdapter(adapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>横向排列(MainActivity)  <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    initFruits();</span><br><span class="line">    RecyclerView recyclerView = findViewById(R.id.recycler_view);</span><br><span class="line">    LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>);</span><br><span class="line">    layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL); <span class="comment">//横向排列</span></span><br><span class="line">    recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">    FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">    recyclerView.setAdapter(adapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>瀑布流布局<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    initFruits();</span><br><span class="line">    RecyclerView recyclerView = findViewById(R.id.recycler_view);</span><br><span class="line">    LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//瀑布流布局</span></span><br><span class="line">    StaggeredGridLayoutManager layoutManager = </span><br><span class="line">            <span class="keyword">new</span> StaggeredGridLayoutManager(<span class="number">3</span>, StaggeredGridLayoutManager.VERTICAL);</span><br><span class="line">    recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">    FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">    recyclerView.setAdapter(adapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>4 Data(1)</title>
    <url>/2021/07/20/Android/4%20Data(1)/</url>
    <content><![CDATA[
        <h1 id="4-Data-1"   >
          <a href="#4-Data-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-Data-1" class="headerlink" title="4 Data(1)"></a>4 Data(1)</h1>
      
        <h3 id="文件存储读取"   >
          <a href="#文件存储读取" class="heading-link"><i class="fas fa-link"></i></a><a href="#文件存储读取" class="headerlink" title="文件存储读取"></a>文件存储读取</h3>
      <ul>
<li><p>存储</p>
<ul>
<li>save()<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String inputText)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">      BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          out = openFileOutput(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE);</span><br><span class="line">          writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">          writer.write(inputText);</span><br><span class="line">      &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              <span class="keyword">if</span>(writer != <span class="keyword">null</span>)&#123;</span><br><span class="line">                  writer.close();</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure></li>
<li>在onDestroy()中保存<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123; <span class="comment">//将输入内容存入文件中</span></span><br><span class="line">      <span class="keyword">super</span>.onDestroy();</span><br><span class="line">      String inputText = edit.getText().toString();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          save(inputText);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure>
<span id="more"></span></li>
</ul>
</li>
<li><p>读取保存的文本</p>
<ul>
<li>load()方法<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">load</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">      FileInputStream in = <span class="keyword">null</span>;</span><br><span class="line">      BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">      StringBuilder content = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">      <span class="keyword">try</span>&#123;</span><br><span class="line">          in = openFileInput(<span class="string">&quot;data&quot;</span>); <span class="comment">//</span></span><br><span class="line">          reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in)); <span class="comment">//</span></span><br><span class="line">          String line = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>)&#123; <span class="comment">//reader.readLine()</span></span><br><span class="line">              content.append(line);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(reader != <span class="keyword">null</span>)&#123;</span><br><span class="line">              <span class="keyword">try</span> &#123;</span><br><span class="line">                  reader.close();</span><br><span class="line">              &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                  e.printStackTrace();</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> content.toString();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure></li>
<li>onCreate中添加：<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">EditText edit = findViewById(R.id.edit);</span><br><span class="line">      String inputText = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          inputText = load();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!TextUtils.isEmpty(inputText))&#123;</span><br><span class="line">          edit.setText(inputText);</span><br><span class="line">          edit.setSelection(inputText.length());</span><br><span class="line">          Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;Restoring succeeded&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>4 Data(2)</title>
    <url>/2021/07/20/Android/4%20Data(2)/</url>
    <content><![CDATA[
        <h1 id="4-Data-2"   >
          <a href="#4-Data-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-Data-2" class="headerlink" title="4 Data(2)"></a>4 Data(2)</h1>
      
        <h3 id="SharedPreferences"   >
          <a href="#SharedPreferences" class="heading-link"><i class="fas fa-link"></i></a><a href="#SharedPreferences" class="headerlink" title="SharedPreferences"></a>SharedPreferences</h3>
      <ul>
<li>保存数据(onCreate方法内)<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button saveData = findViewById(R.id.save_data);</span><br><span class="line">        saveData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SharedPreferences.Editor editor = getSharedPreferences(<span class="string">&quot;data&quot;</span>, MODE_PRIVATE).edit();</span><br><span class="line">                editor.putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">                editor.putInt(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>);</span><br><span class="line">                editor.putBoolean(<span class="string">&quot;married&quot;</span>, <span class="keyword">false</span>);</span><br><span class="line">                editor.apply();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure></li>
<li>读取数据(onCreate方法内)<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button restoreData = findViewById(R.id.restore_data);</span><br><span class="line">        restoreData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SharedPreferences pref = getSharedPreferences(<span class="string">&quot;data&quot;</span>, MODE_PRIVATE);</span><br><span class="line">                String name = pref.getString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">// 通过键读取值</span></span><br><span class="line">                <span class="keyword">int</span> age = pref.getInt(<span class="string">&quot;age&quot;</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">boolean</span> married = pref.getBoolean(<span class="string">&quot;married&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">                Log.i(<span class="string">&quot;---&quot;</span>, <span class="string">&quot;name &quot;</span>+name);</span><br><span class="line">                Log.i(<span class="string">&quot;---&quot;</span>, <span class="string">&quot;age &quot;</span>+age);</span><br><span class="line">                Log.i(<span class="string">&quot;---&quot;</span>, <span class="string">&quot;married &quot;</span>+married);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>2 Fragment</title>
    <url>/2021/07/20/Android/2%20Fragment/</url>
    <content><![CDATA[
        <h1 id="2-Fragment"   >
          <a href="#2-Fragment" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-Fragment" class="headerlink" title="2 Fragment"></a>2 Fragment</h1>
      <blockquote>
<p>一种嵌入到活动中的UI片段</p>
</blockquote>

        <h3 id="碎片"   >
          <a href="#碎片" class="heading-link"><i class="fas fa-link"></i></a><a href="#碎片" class="headerlink" title="碎片"></a>碎片</h3>
      <ul>
<li>java: news, NewsContentFragment, NewsTitleFragment, activity_main,<br>xml: news_content_flag, news_content, news_title_flag, news_item
        <h3 id="关联"   >
          <a href="#关联" class="heading-link"><i class="fas fa-link"></i></a><a href="#关联" class="headerlink" title="关联"></a>关联</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">left_fragment.xml--&gt;LeftFragment.java</span><br><span class="line">right_fragment.xml--&gt;RightFragment.java</span><br><span class="line">another_right_fragment.xml--&gt;AnotherRightFragment.java</span><br></pre></td></tr></table></div></figure></li>
</ul>
<ul>
<li>以LeftFragment为例<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- more --&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LeftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(<span class="meta">@NonNull</span> LayoutInflater inflater, <span class="meta">@Nullable</span> ViewGroup container, <span class="meta">@Nullable</span> Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        View view = inflater.inflate(R.layout.left_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
LeftFragment继承自Fragment，将left_fragment加载进来。</li>
<li>activity_main.xml<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/left_fragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/right_fragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.RightFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></div></figure>
android:name属性显式指明碎片名。
        <h3 id="动态添加碎片"   >
          <a href="#动态添加碎片" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态添加碎片" class="headerlink" title="动态添加碎片"></a>动态添加碎片</h3>
      创建another_right_fragment和AnotherRightFragment，按下左侧按钮将右侧碎片替换成AnotherRightFragment。</li>
<li>replaceFragment()(在MainActivity中)<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">replaceFragment</span><span class="params">(Fragment fragment)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获取FragmentManager</span></span><br><span class="line">    FragmentManager fragmentManager = getSupportFragmentManager();</span><br><span class="line">    <span class="comment">// 开启一个事务</span></span><br><span class="line">    FragmentTransaction transaction = fragmentManager.beginTransaction();</span><br><span class="line">    <span class="comment">// 向容器内添加或替换碎片</span></span><br><span class="line">    transaction.replace(R.id.right_layout, fragment );</span><br><span class="line">    <span class="comment">// 按下Back键返回上个碎片</span></span><br><span class="line">    transaction.addToBackStack(<span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    transaction.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

        <h3 id="碎片与活动之间的通信"   >
          <a href="#碎片与活动之间的通信" class="heading-link"><i class="fas fa-link"></i></a><a href="#碎片与活动之间的通信" class="headerlink" title="碎片与活动之间的通信"></a>碎片与活动之间的通信</h3>
      </li>
<li>活动中获取碎片<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">RightFragment rightFragment = (RightFragment) getFragmentManager().findFragmentById(R.id.right_fragment);</span><br></pre></td></tr></table></div></figure></li>
<li>碎片中获取活动<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">MainActivity activity = (MainActivity) getActivity();</span><br></pre></td></tr></table></div></figure>

        <h3 id="动态加载布局技巧"   >
          <a href="#动态加载布局技巧" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态加载布局技巧" class="headerlink" title="动态加载布局技巧"></a>动态加载布局技巧</h3>
      </li>
<li>使用限定符<br>layout-large/activity_main, layout/activity_main</li>
<li>使用最小宽度限定符<br>res/layout-sw600dp/activity_main
        <h2 id="碎片的生命周期"   >
          <a href="#碎片的生命周期" class="heading-link"><i class="fas fa-link"></i></a><a href="#碎片的生命周期" class="headerlink" title="碎片的生命周期"></a>碎片的生命周期</h2>
      
        <h3 id="碎片的回调方法"   >
          <a href="#碎片的回调方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#碎片的回调方法" class="headerlink" title="碎片的回调方法"></a>碎片的回调方法</h3>
      </li>
<li>onAttach()</li>
<li>onCreateView() 为碎片</li>
<li>onActivityCreated()</li>
<li>onDestroyView()</li>
<li>onDetach()</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>3 Broadcast</title>
    <url>/2021/07/20/Android/3%20Broadcast/</url>
    <content><![CDATA[
        <h1 id="3-Broadcast"   >
          <a href="#3-Broadcast" class="heading-link"><i class="fas fa-link"></i></a><a href="#3-Broadcast" class="headerlink" title="3 Broadcast"></a>3 Broadcast</h1>
      
        <h3 id="动态注册监听网络变化"   >
          <a href="#动态注册监听网络变化" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态注册监听网络变化" class="headerlink" title="动态注册监听网络变化"></a>动态注册监听网络变化</h3>
      <ul>
<li><p>例子</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IntentFilter intentFilter;</span><br><span class="line">    <span class="keyword">private</span> NetWorkChangeReceiver netWorkChangeReceiver;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"><span class="comment">//       intentFilter</span></span><br><span class="line">        intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</span>);</span><br><span class="line">        netWorkChangeReceiver = <span class="keyword">new</span> NetWorkChangeReceiver();</span><br><span class="line"><span class="comment">//        registerReceiver</span></span><br><span class="line">        registerReceiver(netWorkChangeReceiver, intentFilter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line"><span class="comment">//        unregisterReceiver</span></span><br><span class="line">        unregisterReceiver(netWorkChangeReceiver);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//   广播接收器</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">NetWorkChangeReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line"><span class="comment">//          ConnectivityManager</span></span><br><span class="line">            ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(context.CONNECTIVITY_SERVICE);</span><br><span class="line">            NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();</span><br><span class="line">            <span class="keyword">if</span>(networkInfo != <span class="keyword">null</span> &amp;&amp; networkInfo.isAvailable())&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">&quot;Network Available&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">&quot;Network unavailable&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<span id="more"></span></li>
<li><p>加入权限声明</p>
<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></div></figure>

        <h3 id="发送自定义广播"   >
          <a href="#发送自定义广播" class="heading-link"><i class="fas fa-link"></i></a><a href="#发送自定义广播" class="headerlink" title="发送自定义广播"></a>发送自定义广播</h3>
      
        <h4 id="发送标准广播"   >
          <a href="#发送标准广播" class="heading-link"><i class="fas fa-link"></i></a><a href="#发送标准广播" class="headerlink" title="发送标准广播"></a>发送标准广播</h4>
      </li>
<li><p>自定义广播接收器</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(context, <span class="string">&quot;receiver in MyBroadcastReceiver&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>AndroidManifest.xml修改广播接收器</p>
<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyBroadcastReceiver&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.broadcasttest.MY_BROADCAST&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></div></figure></li>
<li><p>MainActivity</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Button button = findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;com.example.broadcasttest.MY_BROADCAST&quot;</span>);</span><br><span class="line">            intent.setPackage(<span class="string">&quot;com.example.broadcasttest&quot;</span>); <span class="comment">// 一定要设置Package，否则无法启动BroadcastReceiver</span></span><br><span class="line">            sendBroadcast(intent);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

        <h4 id="发送有序广播"   >
          <a href="#发送有序广播" class="heading-link"><i class="fas fa-link"></i></a><a href="#发送有序广播" class="headerlink" title="发送有序广播"></a>发送有序广播</h4>
      </li>
<li><p>将MainActivity修改：</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;com.example.broadcasttest.MY_ORDDER_BROADCAST0&quot;</span>);</span><br><span class="line">            intent.setPackage(<span class="string">&quot;com.example.broadcasttest&quot;</span>); <span class="comment">// 一定要设置Package，否则无法启动BroadcastReceiver</span></span><br><span class="line"><span class="comment">//            sendBroadcast(intent);</span></span><br><span class="line">            sendOrderedBroadcast(intent, <span class="keyword">null</span>);</span><br></pre></td></tr></table></div></figure></li>
<li><p>新建Receiver</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReceiver0</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(context, <span class="string">&quot;receiver in MyReceiver0&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>在Manifest.xml部署，优先级20</p>
<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.broadcasttest.MY_ORDDER_BROADCAST0&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></div></figure></li>
<li><p>在onReceive()添加 <code>abortBroadcast();</code>取消广播，下一个接收器不会触发</p>
</li>
<li><p>传递数据给下一个接收器<br>上一个接收器：</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">        bundle.putString(<span class="string">&quot;first&quot;</span>, <span class="string">&quot;this is a message&quot;</span>);</span><br><span class="line">        setResultExtras(bundle);</span><br></pre></td></tr></table></div></figure>
<p>获取上一个接收器存入的数据</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Bundle bundle = getResultExtras(<span class="keyword">true</span>);</span><br><span class="line">        String first = bundle.getString(<span class="string">&quot;first&quot;</span>);</span><br><span class="line">        Toast.makeText(context, <span class="string">&quot;receiver in MyReceiver1\n&quot;</span>+first, Toast.LENGTH_SHORT).show();</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>4 Data(3)</title>
    <url>/2021/07/20/Android/4%20Data(3)/</url>
    <content><![CDATA[
        <h1 id="4-Data-3"   >
          <a href="#4-Data-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-Data-3" class="headerlink" title="4 Data(3)"></a>4 Data(3)</h1>
      
        <h3 id="SQLite"   >
          <a href="#SQLite" class="heading-link"><i class="fas fa-link"></i></a><a href="#SQLite" class="headerlink" title="SQLite"></a>SQLite</h3>
      
        <h4 id="创建SQLiteOpenHelper继承类"   >
          <a href="#创建SQLiteOpenHelper继承类" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建SQLiteOpenHelper继承类" class="headerlink" title="创建SQLiteOpenHelper继承类"></a>创建SQLiteOpenHelper继承类</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_BOOK = <span class="string">&quot;create table Book (&quot;</span></span><br><span class="line">            +<span class="string">&quot;id integer primary key autoincrement, &quot;</span> <span class="comment">//autoincrement: 自增长，自动生成id列的值</span></span><br><span class="line">            +<span class="string">&quot;author text, &quot;</span></span><br><span class="line">            +<span class="string">&quot;price real, &quot;</span></span><br><span class="line">            +<span class="string">&quot;name text)&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDatabaseHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory, <span class="keyword">int</span> version)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, name, factory, version);</span><br><span class="line">        mContext = context;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">        db.execSQL(CREATE_BOOK);</span><br><span class="line">        Toast.makeText(mContext, <span class="string">&quot;create succeeded&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<span id="more"></span>


        <h4 id="创建数据库-MainActivity"   >
          <a href="#创建数据库-MainActivity" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建数据库-MainActivity" class="headerlink" title="创建数据库(MainActivity)"></a>创建数据库(MainActivity)</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">dbHelper = <span class="keyword">new</span> MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="keyword">null</span>, <span class="number">1</span>);</span><br><span class="line">Button createDatabase = findViewById(R.id.create_database);</span><br><span class="line">createDatabase.setOnClickListener(v -&gt;&#123;</span><br><span class="line">    dbHelper.getWritableDatabase(); <span class="comment">// 点击按钮，检测到没有BookStore.db</span></span><br><span class="line">    <span class="comment">// ，会调用MyDatabaseHelper的onCreate()</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure>

        <h4 id="升级数据库"   >
          <a href="#升级数据库" class="heading-link"><i class="fas fa-link"></i></a><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h4>
      <ul>
<li>添加SQL语句<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_CATEGORY = <span class="string">&quot;create table Category(&quot;</span> +</span><br><span class="line">          <span class="string">&quot;id integer primary key autoincrement, &quot;</span> +</span><br><span class="line">          <span class="string">&quot;category_name text, &quot;</span> +</span><br><span class="line">          <span class="string">&quot;category_code integer)&quot;</span>;</span><br></pre></td></tr></table></div></figure></li>
<li>修改onCreate()<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123; <span class="comment">// 升级数据库</span></span><br><span class="line">      db.execSQL(CREATE_BOOK);</span><br><span class="line">      db.execSQL(CREATE_CATEGORY);</span><br><span class="line">      Toast.makeText(mContext, <span class="string">&quot;create succeeded&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure></li>
<li>修改onUpgrade()<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">      db.execSQL(<span class="string">&quot;drop table if exists Book&quot;</span>); <span class="comment">// 删除表</span></span><br><span class="line">      db.execSQL(<span class="string">&quot;drop table if exists Category&quot;</span>);</span><br><span class="line">      onCreate(db);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></div></figure></li>
<li>修改 MyDatabaseHelper 的创建语句<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">dbHelper = <span class="keyword">new</span> MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="keyword">null</span>, <span class="number">3</span>); </span><br><span class="line"><span class="comment">// 已存在BookStore.db，更改版本号才能弹出Toast</span></span><br></pre></td></tr></table></div></figure>

        <h4 id="添加数据（insert）"   >
          <a href="#添加数据（insert）" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加数据（insert）" class="headerlink" title="添加数据（insert）"></a>添加数据（insert）</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button addData = findViewById(R.id.add_data);</span><br><span class="line">        addData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            SQLiteDatabase db = dbHelper.getWritableDatabase(); <span class="comment">//getWritableDatabase()返回一个SQLiteDatabase对象</span></span><br><span class="line">            ContentValues values = <span class="keyword">new</span> ContentValues(); <span class="comment">//insert()的第三个参数</span></span><br><span class="line">            <span class="comment">//开始组装数据</span></span><br><span class="line">            values.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;The davinci code&quot;</span>);</span><br><span class="line">            values.put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;dan brown&quot;</span>);</span><br><span class="line">            values.put(<span class="string">&quot;pages&quot;</span>, <span class="number">454</span>);</span><br><span class="line">            values.put(<span class="string">&quot;price&quot;</span>, <span class="number">16.96</span>);</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>, <span class="keyword">null</span>, values);</span><br><span class="line">            values.clear();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

        <h4 id="更新数据（update）"   >
          <a href="#更新数据（update）" class="heading-link"><i class="fas fa-link"></i></a><a href="#更新数据（update）" class="headerlink" title="更新数据（update）"></a>更新数据（update）</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button updateData = findViewById(R.id.update_data);</span><br><span class="line">        updateData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">            ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">            values.put(<span class="string">&quot;price&quot;</span>, <span class="number">10.99</span>);</span><br><span class="line">            db.update(<span class="string">&quot;Book&quot;</span>, values, <span class="string">&quot;name = ?&quot;</span>,</span><br><span class="line">                    <span class="keyword">new</span> String[]&#123;<span class="string">&quot;the da vinci code&quot;</span>&#125;);</span><br><span class="line">            <span class="comment">// 参数2：要更新的数据，参数3：SQL的where部分，?是占位符，参数4：为参数3提供指定内容</span></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure>

        <h4 id="删除数据"   >
          <a href="#删除数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button deleteData = findViewById(R.id.delete_data);</span><br><span class="line">        deleteData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">            db.delete(<span class="string">&quot;Book&quot;</span>, <span class="string">&quot;pages &gt; ?&quot;</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;500&quot;</span>&#125; );</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure>

        <h4 id="查询数据"   >
          <a href="#查询数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">Button queryData = findViewById(R.id.query_data);</span><br><span class="line">        queryData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">            <span class="comment">//其余为null，查这张表的所有数据 query()</span></span><br><span class="line">            Cursor cursor = db.query(<span class="string">&quot;Book&quot;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>,</span><br><span class="line">                    <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (cursor.moveToFirst())&#123;<span class="comment">//指针移到第一行</span></span><br><span class="line">                <span class="keyword">do</span>&#123;</span><br><span class="line">                    <span class="comment">// getColumnIndex()</span></span><br><span class="line">                    String name = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                    String author = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;author&quot;</span>));</span><br><span class="line">                    <span class="keyword">int</span> pages = cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;pages&quot;</span>));</span><br><span class="line">                    <span class="keyword">double</span> price = cursor.getDouble(cursor.getColumnIndex(<span class="string">&quot;price&quot;</span>));</span><br><span class="line">                    Log.e(<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;name=&quot;</span>+name);</span><br><span class="line">                    Log.e(<span class="string">&quot;aa&quot;</span>, <span class="string">&quot;author=&quot;</span>+author);</span><br><span class="line">                    Log.e(<span class="string">&quot;aa&quot;</span>, <span class="string">&quot;pages=&quot;</span>+pages);</span><br><span class="line">                    Log.e(<span class="string">&quot;aa&quot;</span>, <span class="string">&quot;price=&quot;</span>+price);</span><br><span class="line">                &#125;<span class="keyword">while</span> (cursor.moveToNext());<span class="comment">//</span></span><br><span class="line">                cursor.close();<span class="comment">//</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>4 Data(4)</title>
    <url>/2021/07/20/Android/4%20Data(4)/</url>
    <content><![CDATA[
        <h1 id="4-Data-4"   >
          <a href="#4-Data-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-Data-4" class="headerlink" title="4 Data(4)"></a>4 Data(4)</h1>
      
        <h3 id="LitePal-3-0"   >
          <a href="#LitePal-3-0" class="heading-link"><i class="fas fa-link"></i></a><a href="#LitePal-3-0" class="headerlink" title="LitePal 3.0"></a>LitePal 3.0</h3>
      
        <h4 id="添加依赖、配置"   >
          <a href="#添加依赖、配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加依赖、配置" class="headerlink" title="添加依赖、配置"></a>添加依赖、配置</h4>
      <ul>
<li><p>build.gradle<br><code>   implementation &#39;org.litepal.android:java:3.0.0&#39;</code></p>
</li>
<li><p>AndroidManifest.xml: application添加<br><code>android:name=&quot;org.litepal.LitePalApplication&quot;</code></p>
</li>
<li><p>在app/src/main新建assets/litepal.xml</p>
<figure class="highlight xml"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">litepal</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    数据库名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dbname</span>  <span class="attr">value</span>=<span class="string">&quot;LitePalDemo&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        注册NewsBean表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">&quot;com.example.litepaltest.NewsBean&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">litepal</span>&gt;</span></span><br></pre></td></tr></table></div></figure>
<span id="more"></span></li>
<li><p>创建NewsBean类(Alt + inserrt)</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsBean</span> <span class="keyword">extends</span> <span class="title">LitePalSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String createTime;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(String createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNumber</span><span class="params">(<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.number = number;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> number;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

        <h4 id="MainActivity"   >
          <a href="#MainActivity" class="heading-link"><i class="fas fa-link"></i></a><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h4>
      </li>
<li><p>增加</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//添加单条数据，批量可用List, LitePal.saveAll(list)</span></span><br><span class="line">        NewsBean bean = <span class="keyword">new</span> NewsBean();</span><br><span class="line">        bean.setCreateTime(<span class="string">&quot;20:23&quot;</span>);</span><br><span class="line">        bean.setTitle(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">        bean.setContent(<span class="string">&quot;this is content&quot;</span>);</span><br><span class="line">        bean.setNumber(<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">if</span>(bean.save())&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;save suceeded&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;save failed&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>更新</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateNews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        NewsBean newsBean = <span class="keyword">new</span> NewsBean();</span><br><span class="line"><span class="comment">//        newsBean = LitePal.find(NewsBean.class, 1);</span></span><br><span class="line">        newsBean.setTitle(<span class="string">&quot;new title&quot;</span>);</span><br><span class="line">        newsBean.setContent(<span class="string">&quot;this is new content&quot;</span>);</span><br><span class="line">        newsBean.setToDefault(<span class="string">&quot;title&quot;</span>); <span class="comment">// 设为 null</span></span><br><span class="line">        <span class="keyword">if</span> (newsBean.save()) &#123; <span class="comment">//save同newsBean.update(1)</span></span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;update succeeded&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;update failed&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//newsBean.updateAll(&quot;title = ?&quot;, &quot;title&quot;&#125;;修改所有</span></span><br><span class="line">        <span class="comment">// title为&quot;title&quot;的记录，更新为&quot;new title&quot;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>删除</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deleteNews</span><span class="params">(<span class="keyword">int</span> position)</span></span>&#123;</span><br><span class="line"><span class="comment">//        LitePal.delete(NewsBean.class, position);</span></span><br><span class="line">        LitePal.deleteAll(NewsBean.class);<span class="comment">//delete all</span></span><br><span class="line"><span class="comment">//        LitePal.deleteAll(NewsBean.class, &quot;number &gt; ?&quot;,&quot;100&quot;);</span></span><br><span class="line"><span class="comment">//        LitePal.deleteAll(NewsBean.class, &quot;title = ?&quot;, &quot;张三&quot;);</span></span><br><span class="line"><span class="comment">//        LitePal.deleteAll(NewsBean.class, &quot;title = ? and content = ?&quot;, &quot;张三&quot;, &quot;content&quot;);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure></li>
<li><p>查询</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">queryNews</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;NewsBean&gt; newsBeanList = LitePal.findAll(NewsBean.class);</span><br><span class="line">        NewsBean newsBean = LitePal.find(NewsBean.class, <span class="number">1</span>);<span class="comment">//id为1的记录</span></span><br><span class="line">        <span class="comment">//第一条、最后一条记录</span></span><br><span class="line">        NewsBean first = LitePal.findFirst(NewsBean.class);</span><br><span class="line">        NewsBean last = LitePal.findLast(NewsBean.class);</span><br><span class="line">        <span class="comment">//第5，10，,15条记录</span></span><br><span class="line">        List&lt;NewsBean&gt; newsList1 = LitePal.findAll(NewsBean.class, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>);</span><br><span class="line">        <span class="keyword">for</span>(NewsBean list : newsBeanList)&#123;</span><br><span class="line">            Log.e(<span class="string">&quot;print&quot;</span>, <span class="string">&quot;create time: &quot;</span>+list.getCreateTime());</span><br><span class="line">            Log.e(<span class="string">&quot;print&quot;</span>, <span class="string">&quot;title: &quot;</span>+list.getTitle());</span><br><span class="line">            Log.e(<span class="string">&quot;print&quot;</span>, <span class="string">&quot;content: &quot;</span>+list.getContent());</span><br><span class="line">            Log.e(<span class="string">&quot;print&quot;</span>, <span class="string">&quot;number: &quot;</span>+list.getNumber());</span><br><span class="line">            Log.e(<span class="string">&quot;print&quot;</span>, <span class="string">&quot;sum = &quot;</span>+newsBeanList.size());</span><br><span class="line">            String str = <span class="string">&quot;---------------------------------------------------------&quot;</span>;</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>5 Content Provider(1)</title>
    <url>/2021/07/20/Android/5%20Content%20Provider(1)/</url>
    <content><![CDATA[
        <h1 id="5-Content-Provider-1"   >
          <a href="#5-Content-Provider-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#5-Content-Provider-1" class="headerlink" title="5 Content Provider(1)"></a>5 Content Provider(1)</h1>
      
        <h3 id="运行时权限"   >
          <a href="#运行时权限" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行时权限" class="headerlink" title="运行时权限"></a>运行时权限</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,</span><br><span class="line">                Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;<span class="comment">//判断是否已经授权</span></span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,</span><br><span class="line">                    <span class="keyword">new</span> String[]&#123;Manifest.permission.CALL_PHONE&#125;, <span class="number">1</span>);<span class="comment">//获取权限</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            call();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;<span class="comment">//拨打电话的逻辑操作</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">            intent.setData(Uri.parse(<span class="string">&quot;tel:10086&quot;</span>)); <span class="comment">//Uri.parse()解析成Uri对象</span></span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SecurityException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123; <span class="comment">//判断获取权限结果</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    call();</span><br><span class="line">                &#125;<span class="keyword">else</span>  &#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;获取权限失败&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>5 Content Provider(3)</title>
    <url>/2021/07/20/Android/5%20Content%20Provider(3)/</url>
    <content><![CDATA[
        <h1 id="5-Content-Provider-3"   >
          <a href="#5-Content-Provider-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#5-Content-Provider-3" class="headerlink" title="5 Content Provider(3)"></a>5 Content Provider(3)</h1>
      
        <h3 id="在databasetest中新建一个文件DatabaseProvider-java-创建内容提供器"   >
          <a href="#在databasetest中新建一个文件DatabaseProvider-java-创建内容提供器" class="heading-link"><i class="fas fa-link"></i></a><a href="#在databasetest中新建一个文件DatabaseProvider-java-创建内容提供器" class="headerlink" title="在databasetest中新建一个文件DatabaseProvider.java/创建内容提供器"></a>在databasetest中新建一个文件<code>DatabaseProvider.java</code>/创建内容提供器</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatabaseProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOK_DIR = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOK_ITEM = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_DIR =<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">&quot;com.example.databasetest.provider&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> MyDatabaseHelper dbHelper;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        uriMatcher =  <span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        <span class="comment">//注册需要的Uri</span></span><br><span class="line">        uriMatcher.addURI(AUTHORITY, <span class="string">&quot;book&quot;</span>, BOOK_DIR);<span class="comment">//参数3是要返回的匹配码</span></span><br><span class="line">        uriMatcher.addURI(AUTHORITY, <span class="string">&quot;book/#&quot;</span>, BOOK_ITEM);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY, <span class="string">&quot;category&quot;</span>, CATEGORY_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY, <span class="string">&quot;category/#&quot;</span>, CATEGORY_ITEM);</span><br><span class="line">    &#125;<span class="comment">//静态代码块，对UriMatcher初始化</span></span><br><span class="line">    <span class="comment">//将期望匹配的3种URI格式添加进去</span></span><br><span class="line">    <span class="comment">//--常量 UriMatcher.NO_MATCH 表示不匹配任何路径的返回码</span></span><br><span class="line">    <span class="comment">//--# 号为通配符</span></span><br><span class="line">    <span class="comment">//--* 号为任意字符</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to initialize your content provider on startup.</span></span><br><span class="line">        <span class="comment">//创建或升级数据库</span></span><br><span class="line">        dbHelper = <span class="keyword">new</span> MyDatabaseHelper(getContext(), <span class="string">&quot;BookStore.db&quot;</span>, <span class="keyword">null</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    public DatabaseProvider() &#123;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection,</span></span></span><br><span class="line"><span class="params"><span class="function">                        String[] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle query requests from clients.</span></span><br><span class="line">        <span class="comment">//创建SQLiteDatabase实例</span></span><br><span class="line">        SQLiteDatabase db = dbHelper.getReadableDatabase();</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                cursor  = db.query(<span class="string">&quot;Book&quot;</span>, projection, selection, selectionArgs, <span class="keyword">null</span>, <span class="keyword">null</span>, sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="comment">//将URI的AUTHORITY之后的部分用 / 符号分割，放到一个列表中</span></span><br><span class="line">                <span class="comment">//不包含元字符串最左端的部分</span></span><br><span class="line">                String bookId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Book&quot;</span>, projection, <span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123;bookId&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Category&quot;</span>, projection, selection, selectionArgs, <span class="keyword">null</span>, <span class="keyword">null</span>, sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                String categoryId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Category&quot;</span>, projection, <span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123; categoryId &#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cursor; <span class="comment">//返回cursor</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to insert a new row.</span></span><br><span class="line">        SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">        Uri uriReturn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newBookId = db.insert(<span class="string">&quot;Book&quot;</span>, <span class="keyword">null</span>, values);<span class="comment">//返回新增的行号</span></span><br><span class="line">                uriReturn = Uri.parse(<span class="string">&quot;content://&quot;</span>+AUTHORITY+<span class="string">&quot;/book/&quot;</span>+newBookId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newCategoryId = db.insert(<span class="string">&quot;Category&quot;</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uriReturn = Uri.parse(<span class="string">&quot;content://&quot;</span>+AUTHORITY+ <span class="string">&quot;/category/&quot;</span>+newCategoryId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uriReturn;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection,</span></span></span><br><span class="line"><span class="params"><span class="function">                      String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to update one or more rows.</span></span><br><span class="line">        SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">        <span class="keyword">int</span> updatedRows =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                updatedRows = db.update(<span class="string">&quot;Book&quot;</span>, values, selection, selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                String bookId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                updatedRows = db.update(<span class="string">&quot;Book&quot;</span>, values, <span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123;bookId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                updatedRows = db.update(<span class="string">&quot;Category&quot;</span>, values, selection, selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                String categoryId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                updatedRows = db.update(<span class="string">&quot;Category&quot;</span>, values, <span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123;categoryId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> updatedRows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Implement this to handle requests to delete one or more rows.</span></span><br><span class="line">        SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">        <span class="keyword">int</span> deletedRows =  <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                deletedRows = db.delete(<span class="string">&quot;Book&quot;</span>, selection, selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                String bookId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                deletedRows = db.delete(<span class="string">&quot;Book&quot;</span>, <span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123;bookId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                deletedRows = db.delete(<span class="string">&quot;Category&quot;</span>, selection, selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                String categoryId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                deletedRows = db.delete(<span class="string">&quot;Category&quot;</span>, <span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123;categoryId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deletedRows;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123; <span class="comment">//用于获取Uri对象MIME类型（字符串）</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests for the MIME type of the data</span></span><br><span class="line">        <span class="comment">// at the given URI.</span></span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vnd.android.cursor.dir/vnd.example.databasetest.provider.book&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vnd.android.cursor.item./vnd.example.databasetest.provider.book&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vnd.android.cursor.dir/vnd.example.databasetest.provider.category&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vnd.android.cursor.item/vnd.example.databasetest.provider.category&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<span id="more"></span>

<p>内容提供器一定要在Manifest中注册才能使用。用快捷方式创建内容提供器时，注册已经完成了。现在程序已经拥有跨程序共享功能了。</p>

        <h3 id="创建一个新应用去实现跨程序访问"   >
          <a href="#创建一个新应用去实现跨程序访问" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建一个新应用去实现跨程序访问" class="headerlink" title="创建一个新应用去实现跨程序访问"></a>创建一个新应用去实现跨程序访问</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String newId;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Button addData = findViewById(R.id.add_data);</span><br><span class="line">        addData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            Uri uri = Uri.parse(<span class="string">&quot;content://com.example.databasetest.provider/book&quot;</span>);</span><br><span class="line">            ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">            <span class="comment">//把要添加数据存放到ContentValues对象中</span></span><br><span class="line">            values.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;A Clash Of Kings&quot;</span>);</span><br><span class="line">            values.put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;george martin&quot;</span>);</span><br><span class="line">            values.put(<span class="string">&quot;pages&quot;</span>, <span class="number">1040</span>);</span><br><span class="line">            values.put(<span class="string">&quot;price&quot;</span>, <span class="number">22.85</span>);</span><br><span class="line">            Uri newUri = getContentResolver().insert(uri, values);</span><br><span class="line">            Log.e(<span class="string">&quot;newUri&quot;</span>, <span class="string">&quot;is &quot;</span>+newUri);</span><br><span class="line">            newId = newUri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        Button queryData = findViewById(R.id.query_data);</span><br><span class="line">        queryData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            Uri uri = Uri.parse(<span class="string">&quot;content://com.example.databasetest.provider/book&quot;</span>);</span><br><span class="line">            Cursor cursor = getContentResolver().query(uri, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            Log.e(<span class="string">&quot;newId&quot;</span>, <span class="string">&quot;-------------------query--------------------------&quot;</span>+newId);</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">while</span>(cursor.moveToNext())&#123;</span><br><span class="line">                    String name = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                    String author = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;author&quot;</span>));</span><br><span class="line">                    <span class="keyword">int</span> pages = cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;pages&quot;</span>));</span><br><span class="line">                    <span class="keyword">double</span> price = cursor.getDouble(cursor.getColumnIndex(<span class="string">&quot;price&quot;</span>));</span><br><span class="line">                    Log.e(<span class="string">&quot;---&gt;&quot;</span>, <span class="string">&quot;book name: &quot;</span>+name);</span><br><span class="line">                    Log.e(<span class="string">&quot;---&gt;&quot;</span>, <span class="string">&quot;author: &quot;</span>+author);</span><br><span class="line">                    Log.e(<span class="string">&quot;---&gt;&quot;</span>, <span class="string">&quot;pages: &quot;</span>+pages);</span><br><span class="line">                    Log.e(<span class="string">&quot;---&gt;&quot;</span>, <span class="string">&quot;price: &quot;</span>+price);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        Button updateData = findViewById(R.id.update_data);</span><br><span class="line">        updateData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            Uri uri = Uri.parse(<span class="string">&quot;content://com.example.databasetest.provider/book/&quot;</span>+newId);</span><br><span class="line">            ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">            Log.e(<span class="string">&quot;newId&quot;</span>, <span class="string">&quot;-------------------update--------------------------&quot;</span>+newId);</span><br><span class="line">            values.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;a storm of swords&quot;</span>);</span><br><span class="line">            values.put(<span class="string">&quot;pages&quot;</span>, <span class="number">100</span>);</span><br><span class="line">            values.put(<span class="string">&quot;price&quot;</span>, <span class="number">100.23</span>);</span><br><span class="line">            values.put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;no author&quot;</span>);</span><br><span class="line">            getContentResolver().update(uri, values, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        Button deleteData = findViewById(R.id.delete_data);</span><br><span class="line">        deleteData.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            Log.e(<span class="string">&quot;newId&quot;</span>, <span class="string">&quot;-------------------update--------------------------&quot;</span>+newId);</span><br><span class="line">            Uri uri = Uri.parse(<span class="string">&quot;content://com.example.databasetest.provider/book/&quot;</span>+newId);</span><br><span class="line">            getContentResolver().delete(uri, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>5 Content Provider(2)</title>
    <url>/2021/07/20/Android/5%20Content%20Provider(2)/</url>
    <content><![CDATA[
        <h1 id="5-Content-Provider-2"   >
          <a href="#5-Content-Provider-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#5-Content-Provider-2" class="headerlink" title="5 Content Provider(2)"></a>5 Content Provider(2)</h1>
      
        <h3 id="ContentResolver的用法-访问其他应用程序的数据-跨程序共享数据"   >
          <a href="#ContentResolver的用法-访问其他应用程序的数据-跨程序共享数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#ContentResolver的用法-访问其他应用程序的数据-跨程序共享数据" class="headerlink" title="ContentResolver的用法/访问其他应用程序的数据/跨程序共享数据"></a>ContentResolver的用法/访问其他应用程序的数据/跨程序共享数据</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ArrayAdapter&lt;String&gt; adapter;</span><br><span class="line">    List&lt;String&gt; contactsList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ListView contactsView = (ListView)findViewById(R.id.contacts_list);</span><br><span class="line">        adapter = <span class="keyword">new</span> ArrayAdapter&lt;String&gt;(<span class="keyword">this</span>, android.R.layout.simple_list_item_1, contactsList); <span class="comment">//设置适配器</span></span><br><span class="line">        contactsView.setAdapter(adapter);</span><br><span class="line">        <span class="keyword">if</span> (ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.READ_CONTACTS) != PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.READ_CONTACTS&#125;, <span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            readContacts();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readContacts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// CONTENT_URI常量是ContactsContract.CommonDataKinds.Phone类做好的封装</span></span><br><span class="line">            cursor = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">while</span>(cursor.moveToNext())&#123;</span><br><span class="line">                    String displayName = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</span><br><span class="line">                    String number = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</span><br><span class="line">                    contactsList.add(displayName+<span class="string">&quot;\n&quot;</span>+number); <span class="comment">// 将数据添加到ListView</span></span><br><span class="line">                &#125;</span><br><span class="line">                adapter.notifyDataSetChanged(); <span class="comment">//通知刷新一下ListView</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length&gt;<span class="number">0</span>&amp;&amp;grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    readContacts();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;权限获取失败&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Multimedia(1): Notification</title>
    <url>/2021/07/20/Android/Multimedia(1)%EA%9E%89%20Notification/</url>
    <content><![CDATA[
        <h1 id="Multimedia-1-Notification"   >
          <a href="#Multimedia-1-Notification" class="heading-link"><i class="fas fa-link"></i></a><a href="#Multimedia-1-Notification" class="headerlink" title="Multimedia(1): Notification"></a>Multimedia(1): Notification</h1>
      
        <h3 id="使用通知"   >
          <a href="#使用通知" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用通知" class="headerlink" title="使用通知"></a>使用通知</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Button sendNotice = findViewById(R.id.send_notice);</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, NotificationActivity.class); <span class="comment">//启动NotificationActivity的意图</span></span><br><span class="line">        PendingIntent pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>); <span class="comment">//获取PendingIntent实例</span></span><br><span class="line">        sendNotice.setOnClickListener(v -&gt;&#123;</span><br><span class="line">                        NotificationManager manager = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">                        Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>).setContentTitle(<span class="string">&quot;Content Title&quot;</span>)</span><br><span class="line">                                .setContentText(<span class="string">&quot;Content Text&quot;</span>)</span><br><span class="line">                                .setWhen(System.currentTimeMillis())</span><br><span class="line">                                .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">                                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))</span><br><span class="line">                                .setContentIntent(pi)</span><br><span class="line">                                .setAutoCancel(<span class="keyword">true</span>)<span class="comment">//点击后自动取消通知</span></span><br><span class="line">                                .build();</span><br><span class="line">                        manager.notify(<span class="number">1</span>, notification);</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></div></figure>
<span id="more"></span>


        <h3 id="进阶"   >
          <a href="#进阶" class="heading-link"><i class="fas fa-link"></i></a><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">.setSound(Uri.fromFile(<span class="keyword">new</span> File(<span class="string">&quot;/system/media/audio/notifications/Antimony.ogg&quot;</span>)))<span class="comment">//播放音频</span></span><br><span class="line">.setVibrate(<span class="keyword">new</span> <span class="keyword">long</span>[]&#123;<span class="number">0</span>, <span class="number">500</span>, <span class="number">500</span>, <span class="number">500</span>&#125;) <span class="comment">//振动</span></span><br><span class="line">.setLights(Color.GREEN, <span class="number">1000</span>, <span class="number">1000</span>) <span class="comment">//指示灯</span></span><br><span class="line"><span class="comment">//        .setDefaults(NotificationCompat.DEFAULT_ALL) //手机默认通知效果</span></span><br></pre></td></tr></table></div></figure>


]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android</title>
    <url>/2021/07/20/Android/index/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Multimedia(2):Camera</title>
    <url>/2021/07/20/Android/Multimedia(2)%EA%9E%89Camera/</url>
    <content><![CDATA[
        <h1 id="Multimedia-2-Camera"   >
          <a href="#Multimedia-2-Camera" class="heading-link"><i class="fas fa-link"></i></a><a href="#Multimedia-2-Camera" class="headerlink" title="Multimedia(2):Camera"></a>Multimedia(2):Camera</h1>
      
        <h3 id="调用相机"   >
          <a href="#调用相机" class="heading-link"><i class="fas fa-link"></i></a><a href="#调用相机" class="headerlink" title="调用相机"></a>调用相机</h3>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TAKE_PHOTO = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> ImageView picture;</span><br><span class="line">    <span class="keyword">private</span> Uri imageUri;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Button takePhoto = findViewById(R.id.take_photo);</span><br><span class="line">        picture = findViewById(R.id.picture);</span><br><span class="line">        takePhoto.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            <span class="comment">//getExternalCacheDir得到缓存目录</span></span><br><span class="line">            File outputImage = <span class="keyword">new</span> File(getExternalCacheDir(), <span class="string">&quot;output_image.jpg&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (outputImage.exists()) &#123;</span><br><span class="line">                    outputImage.delete();</span><br><span class="line">                &#125;</span><br><span class="line">                outputImage.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">24</span>) &#123;</span><br><span class="line">                <span class="comment">//getUriForFile将file对象转换成一个Uri对象</span></span><br><span class="line">                imageUri = FileProvider.getUriForFile(<span class="keyword">this</span>, <span class="string">&quot;com.example.cameratest.fileprovider&quot;</span>, outputImage);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//Uri标识着真实的路径（不安全）</span></span><br><span class="line">                imageUri = Uri.fromFile(outputImage);</span><br><span class="line">            &#125;</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;android.media.action.IMAGE_CAPTURE&quot;</span>);</span><br><span class="line"><span class="comment">//            Intent intent = new Intent(&quot;android.media.ACTION_IMAGE_CAPTURE&quot;);</span></span><br><span class="line"><span class="comment">//            Intent intent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);</span></span><br><span class="line">            intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);<span class="comment">//putExtra指定图片输出地址</span></span><br><span class="line">            startActivityForResult(intent, TAKE_PHOTO);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, <span class="meta">@Nullable</span> Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line"><span class="comment">//        Log.e(&quot;requestCode&quot;, &quot;&quot;+requestCode);</span></span><br><span class="line"><span class="comment">//        Log.e(&quot;result_ok&quot;, &quot;&quot;+ Activity.RESULT_OK);</span></span><br><span class="line"><span class="comment">//        Log.e(&quot;result_code&quot;, &quot;&quot;+resultCode);</span></span><br><span class="line">        <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> TAKE_PHOTO:</span><br><span class="line">                <span class="keyword">if</span> (resultCode == RESULT_OK) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Log.e(<span class="string">&quot;tips&quot;</span>, <span class="string">&quot;---------------try block-------------------&quot;</span>);</span><br><span class="line">                        Bitmap bitmap = BitmapFactory.decodeStream(getContentResolver().openInputStream(imageUri));<span class="comment">//将图片解析成Bitmap对象</span></span><br><span class="line">                        picture.setImageBitmap(bitmap);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>

<span id="more"></span>


        <h3 id="从相册中选取照片"   >
          <a href="#从相册中选取照片" class="heading-link"><i class="fas fa-link"></i></a><a href="#从相册中选取照片" class="headerlink" title="从相册中选取照片"></a>从相册中选取照片</h3>
      
        <h4 id="申请存储权限"   >
          <a href="#申请存储权限" class="heading-link"><i class="fas fa-link"></i></a><a href="#申请存储权限" class="headerlink" title="申请存储权限"></a>申请存储权限</h4>
      <figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line">chooseFromAlbum.setOnClickListener(v -&gt;&#123;</span><br><span class="line">            <span class="comment">//申请WRITE_EXTERNAL_STORAGE权限</span></span><br><span class="line">            <span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, Manifest.permission.WRITE_EXTERNAL_STORAGE)!= PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;, <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                openAlbum();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">openAlbum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置Intent指定action为android.intent.action.GET_CONTENT</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;android.intent.action.GET_CONTENT&quot;</span>);</span><br><span class="line">        intent.setType(<span class="string">&quot;image/*&quot;</span>);</span><br><span class="line">        startActivityForResult(intent, CHOOSE_PHOTO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    openAlbum();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;Access denied&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>

        <h4 id="处理Uri"   >
          <a href="#处理Uri" class="heading-link"><i class="fas fa-link"></i></a><a href="#处理Uri" class="headerlink" title="处理Uri"></a>处理Uri</h4>
      <p>在onActivityResult中添加case</p>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> CHOOSE_PHOTO:</span><br><span class="line">               <span class="keyword">if</span> (resultCode == RESULT_OK)&#123;</span><br><span class="line">                   <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>)&#123;  <span class="comment">//4.4以上系统返回的不是图片真实的Uri</span></span><br><span class="line">                       handleImageOnKitKat(data);<span class="comment">//需要对Uri解析</span></span><br><span class="line">                   &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                       handleImageBeforeKitKat(data);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></div></figure>

<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleImageOnKitKat</span><span class="params">(Intent data)</span> </span>&#123;</span><br><span class="line">        String imagePath = <span class="keyword">null</span>;<span class="comment">//图片的真实路径</span></span><br><span class="line">        Uri uri = data.getData();</span><br><span class="line">        <span class="comment">//返回的Uri是document类型，不是则用普通方式处理</span></span><br><span class="line">        <span class="keyword">if</span> (DocumentsContract.isDocumentUri(<span class="keyword">this</span>, uri))&#123;</span><br><span class="line">            String docId = DocumentsContract.getDocumentId(uri);</span><br><span class="line">            <span class="comment">//Uri的Authority是media格式，在进行一次解析</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;com.android.providers.media.documents&quot;</span>.equals(uri.getAuthority()))&#123;</span><br><span class="line">                String id = docId.split(<span class="string">&quot;:&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">                String selection = MediaStore.Images.Media._ID+<span class="string">&quot;=&quot;</span>+id;</span><br><span class="line">                imagePath = getImagePath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, selection);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;com.android.providers.downloads.documents&quot;</span>.equals(uri.getAuthority()))&#123;</span><br><span class="line">                Uri contentUri = ContentUris.withAppendedId(Uri.parse(<span class="string">&quot;content://downloads/public_downloads&quot;</span>), Long.valueOf(docId));</span><br><span class="line">                imagePath = getImagePath(contentUri, <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;content&quot;</span>.equalsIgnoreCase(uri.getScheme()))&#123;</span><br><span class="line">            imagePath = getImagePath(uri, <span class="keyword">null</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;file&quot;</span>.equalsIgnoreCase(uri.getScheme()))&#123;</span><br><span class="line">            imagePath = uri.getPath();</span><br><span class="line">        &#125;</span><br><span class="line">        displayImage(imagePath);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleImageBeforeKitKat</span><span class="params">(Intent data)</span> </span>&#123;</span><br><span class="line">        Uri uri = data.getData();</span><br><span class="line">        String imagePath = getImagePath(uri, <span class="keyword">null</span>);</span><br><span class="line">        displayImage(imagePath);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>
<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getImagePath</span><span class="params">(Uri externalContentUri, String selection)</span> </span>&#123;</span><br><span class="line">        String path = <span class="keyword">null</span>;</span><br><span class="line">        Cursor cursor = getContentResolver().query(externalContentUri, <span class="keyword">null</span>, selection, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (cursor.moveToFirst())&#123;</span><br><span class="line">                path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));</span><br><span class="line">            &#125;</span><br><span class="line">            cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">displayImage</span><span class="params">(String imagePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (imagePath != <span class="keyword">null</span>)&#123;</span><br><span class="line">            Bitmap bitmap = BitmapFactory.decodeFile(imagePath);</span><br><span class="line">            picture.setImageBitmap(bitmap);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;failed to get Image&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 基础(1)</title>
    <url>/2020/03/21/Web/js-01/</url>
    <content><![CDATA[
        <h3 id="行内式"   >
          <a href="#行内式" class="heading-link"><i class="fas fa-link"></i></a><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h3>
      <p><code>&lt;a href=&quot;javascript: alert(&#39;hello world&#39;)&quot;&gt;点我&lt;/a&gt;</code></p>
<p><code>&lt;div onclick=&quot;alert(&#39;hello world&#39;)&quot;&gt;点我&lt;/div&gt;</code></p>

        <h3 id="内嵌式"   >
          <a href="#内嵌式" class="heading-link"><i class="fas fa-link"></i></a><a href="#内嵌式" class="headerlink" title="内嵌式"></a>内嵌式</h3>
      <p>可以放在页面任何位置</p>

        <h3 id="链入式"   >
          <a href="#链入式" class="heading-link"><i class="fas fa-link"></i></a><a href="#链入式" class="headerlink" title="链入式"></a>链入式</h3>
      <p><code>&lt;script src=&quot;/xxx.js&quot;&gt;&lt;/script&gt;</code><br>此时写在标签内的内容不会执行</p>

        <h3 id="输出"   >
          <a href="#输出" class="heading-link"><i class="fas fa-link"></i></a><a href="#输出" class="headerlink" title="输出"></a>输出</h3>
      <ul>
<li>alert()</li>
<li>console.log()</li>
<li>document.write()<span id="more"></span></li>
</ul>

        <h3 id="变量"   >
          <a href="#变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#变量" class="headerlink" title="变量"></a>变量</h3>
      <ul>
<li>定义变量：<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> text = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1234</span></span><br><span class="line">b = <span class="number">1234</span> <span class="comment">//不建议不加 var 定义变量</span></span><br><span class="line"><span class="comment">// 同时定义多个变量</span></span><br><span class="line"><span class="comment">// 换行或分号表示结束</span></span><br><span class="line"><span class="keyword">var</span> a, b, c</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>, b , c = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="comment">// 驼峰命名法：当多个单词组成变量名时，第二个字母开始首字母大写</span></span><br><span class="line"><span class="keyword">var</span> getGoodList</span><br></pre></td></tr></table></div></figure></li>
<li>数据类型：</li>
</ul>
<ol>
<li>基本数据类型<ul>
<li>Number数值</li>
<li>String</li>
<li>Boolean</li>
<li>Undefined</li>
<li>Null<!-- 科学计数法：2e5 -->
<!-- NaN: Not a Number（非数字） -->
<!-- Undefined和Null不想通过 --></li>
</ul>
</li>
<li>复杂数据类型（地址数据类型、引用数据类型）<ul>
<li>Object</li>
<li>Function </li>
</ul>
</li>
<li>检测数据类型<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> n1 = <span class="number">100</span></span><br><span class="line"><span class="keyword">var</span> n2 = <span class="number">200</span></span><br><span class="line"><span class="keyword">var</span> res</span><br><span class="line">res = <span class="keyword">typeof</span>(n1) </span><br><span class="line"><span class="built_in">console</span>.log(res) <span class="comment">// number</span></span><br><span class="line">res = <span class="keyword">typeof</span>(n1+n2) <span class="comment">// number</span></span><br><span class="line">res = <span class="keyword">typeof</span> n1 + n2</span><br><span class="line"><span class="built_in">console</span>.log(res) <span class="comment">// number200</span></span><br><span class="line">res = <span class="keyword">typeof</span> <span class="keyword">typeof</span>(n1 + n2) <span class="comment">// string</span></span><br><span class="line"><span class="comment">// typeof()返回对象,只能准确地返回基本数据类型。返回值是一个字符串</span></span><br><span class="line"><span class="comment">// undefined返回undefined</span></span><br><span class="line"><span class="comment">// null返回object</span></span><br></pre></td></tr></table></div></figure></li>
</ol>

        <h3 id="数值类型转换"   >
          <a href="#数值类型转换" class="heading-link"><i class="fas fa-link"></i></a><a href="#数值类型转换" class="headerlink" title="数值类型转换"></a>数值类型转换</h3>
      <ul>
<li><p>转数值</p>
<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Number()把转换对象当成一个整体</span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Number</span>(n1)</span><br><span class="line"><span class="built_in">console</span>.log(res)</span><br><span class="line">n1 = <span class="string">&quot;abc&quot;</span></span><br><span class="line">res = <span class="built_in">Number</span>(res)</span><br><span class="line"><span class="built_in">console</span>.log(res) <span class="comment">// NaN</span></span><br><span class="line"><span class="comment">// parseInt()把转换对象一位一位地看，遇到不能转换的位置停止</span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="string">&#x27;123abc&#x27;</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">parseInt</span>(n1)</span><br><span class="line"><span class="built_in">console</span>.log(res) <span class="comment">// 123</span></span><br><span class="line"><span class="comment">// 布尔值</span></span><br><span class="line"><span class="keyword">var</span> b1 = <span class="literal">true</span>  </span><br><span class="line"><span class="built_in">Number</span>(b1) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">parseInt</span>(b1)<span class="comment">// NaN</span></span><br><span class="line"><span class="comment">// parseInt()忽略小数点, 要用parseFloat</span></span><br><span class="line"><span class="comment">//取正负值 与Number()相同</span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="string">&#x27;100&#x27;</span></span><br><span class="line"><span class="keyword">var</span> res1 = +n1 <span class="comment">// 100</span></span><br><span class="line"><span class="keyword">var</span> res2 = -n1 <span class="comment">// -100</span></span><br><span class="line"><span class="comment">// 非加法运算</span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="string">&#x27;100&#x27;</span></span><br><span class="line"><span class="keyword">var</span> res1 = n1 * <span class="number">1</span> <span class="comment">// 200</span></span><br><span class="line"><span class="keyword">var</span> res2 = n1 / <span class="number">1</span> <span class="comment">// 200</span></span><br><span class="line"><span class="keyword">var</span> res3 = n1 - <span class="number">0</span> <span class="comment">// 200</span></span><br><span class="line"><span class="keyword">var</span> res4 = <span class="literal">false</span> / <span class="number">1</span> <span class="comment">// 0</span></span><br></pre></td></tr></table></div></figure></li>
<li><p>转字符串</p>
<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// String()转换任何数据类型</span></span><br><span class="line"><span class="comment">// toString() </span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="number">100</span></span><br><span class="line">n1.toString()</span><br><span class="line"><span class="comment">// undefined和null没有toString()方法</span></span><br></pre></td></tr></table></div></figure></li>
<li><p>加法运算</p>
<ul>
<li>加号其中一边是字符串时，字符串拼接</li>
<li>两边都是数字或有布尔值时，加法运算<!-- console.log(1+'2'+3*4)结果是1212 ，先算乘法 --></li>
</ul>
</li>
<li><p>转布尔值</p>
<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 只有五个能转换为false</span></span><br><span class="line"><span class="number">0</span>, <span class="string">&#x27;&#x27;</span>, <span class="literal">NaN</span>, , <span class="literal">undefined</span>, <span class="literal">null</span></span><br><span class="line"><span class="built_in">console</span>.log([] == <span class="string">&#x27;&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Boolean</span>([]) <span class="comment">// true</span></span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h3 id="运算符"   >
          <a href="#运算符" class="heading-link"><i class="fas fa-link"></i></a><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3>
      <ul>
<li>数值运算符</li>
<li>赋值运算符（两个数据进行比较的符号）<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="string">&#x27;1&#x27;</span> <span class="comment">// true</span></span><br><span class="line"><span class="number">1</span> == <span class="literal">true</span> <span class="comment">// true</span></span><br><span class="line"><span class="literal">undefined</span> == <span class="literal">null</span> <span class="comment">// true</span></span><br><span class="line"><span class="literal">NaN</span> == <span class="literal">NaN</span> <span class="comment">// false </span></span><br><span class="line">!== <span class="comment">//值和数据类型都要比较</span></span><br><span class="line">=== <span class="comment">//等等于：值和数据类型都要比较</span></span><br><span class="line">！= <span class="comment">//比较数值，不比较数据类型</span></span><br><span class="line">== <span class="comment">//比较数值，不比较数据类型</span></span><br></pre></td></tr></table></div></figure>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">保留三位小数：</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">100.2345678</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">parseInt</span>(n * <span class="number">1000</span>) / <span class="number">1000</span></span><br><span class="line"><span class="built_in">console</span>.log(res) <span class="comment">// 100.234</span></span><br></pre></td></tr></table></div></figure></li>
<li>逻辑运算符<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">||, &amp;&amp;, !</span><br></pre></td></tr></table></div></figure></li>
<li>自增自减</li>
</ul>

        <h3 id="条件分支语句"   >
          <a href="#条件分支语句" class="heading-link"><i class="fas fa-link"></i></a><a href="#条件分支语句" class="headerlink" title="条件分支语句"></a>条件分支语句</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(), <span class="keyword">switch</span>(), <span class="keyword">while</span>(),<span class="keyword">do</span>&#123;&#125;<span class="keyword">while</span>(), <span class="keyword">for</span>(); <span class="keyword">do</span>&#123;&#125;<span class="keyword">while</span>和<span class="keyword">while</span>的区别：不管条件是否成立，都先执行一次</span><br></pre></td></tr></table></div></figure>


        <h3 id="函数"   >
          <a href="#函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#函数" class="headerlink" title="函数"></a>函数</h3>
      <ul>
<li>定义式<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>赋值式<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>调用</li>
</ul>
<ol>
<li>函数名()</li>
<li>区别：生命式函数可在前后位置调用，赋值式函数只能在后面位置调用</li>
<li>实参和形参: 1. 从左到右顺序一一对应 2. 多出来的实参不能直接使用 3. 多出来的形参，没有实参赋值，为undefined</li>
</ol>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 例子：</span></span><br><span class="line"><span class="comment">// 判断质数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i&lt;=<span class="built_in">parseInt</span>(a/<span class="number">2</span>); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span>)&#123;</span><br><span class="line">            flag = <span class="literal">false</span>;<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(flag);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure>
<ol start="4">
<li>return 可以打断函数；返回值。</li>
<li>封装<figure class="highlight html"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./util.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 可以直接使用封装的函数</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> a = getReturn()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></div></figure></li>
</ol>
<ul>
<li>预解析<br><br/>在所有代码执行之前，对整体代码作为文档进行通读并解析</li>
</ul>
<ol>
<li>var关键字<br/><br>定义的变量代码执行之前声明 （变量没有赋值，在变量前面的console.log()，声明式函数提示错误，变量提示undefined</li>
<li>声明式函数<br><br/>在所有代码执行之前声明，并赋值为函数<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 例子: </span></span><br><span class="line">fn()</span><br><span class="line"><span class="keyword">var</span> fn = <span class="number">100</span></span><br><span class="line">fn() <span class="comment">// 提示错误--fn()不是一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;fn 函数&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">fn()</span><br></pre></td></tr></table></div></figure></li>
</ol>
<ul>
<li>注</li>
</ul>
<ol>
<li>if条件不管是否成立，里面的代码都会进行预解析，不赋值</li>
<li>return后面的代码 不执行，但会预解析<ul>
<li>声明式函数尽量不要先调用</li>
<li>尽量使用赋值式函数</li>
</ul>
</li>
</ol>
<ul>
<li>作用域</li>
</ul>

        <h3 id="对象数据类型"   >
          <a href="#对象数据类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#对象数据类型" class="headerlink" title="对象数据类型"></a>对象数据类型</h3>
      <ul>
<li><p>字面量创建对象</p>
<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> o2 = &#123;</span><br><span class="line">    <span class="attr">num</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">str</span>: <span class="string">&#x27;hello world&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">&#x27;我是 o 的 fn 函数)&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></div></figure></li>
<li><p>内置构造函数创建对象</p>
<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>()</span><br></pre></td></tr></table></div></figure></li>
<li><p>对象操作</p>
<ul>
<li>点语法操作对象<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 添加成员</span><br><span class="line">o.par = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">o.par1 = <span class="number">100</span></span><br><span class="line"><span class="number">2.</span> 删除成员</span><br><span class="line"><span class="keyword">delete</span> o.par</span><br><span class="line"><span class="number">3.</span> 修改成员</span><br><span class="line">o.par1 = <span class="number">200</span></span><br><span class="line"><span class="number">4.</span> 查询成员</span><br><span class="line"><span class="built_in">console</span>.log(o.par1)</span><br></pre></td></tr></table></div></figure>
<code>控制台展开对象数据类型之后，是最终的样子。</code><br><code>解决办法：直接打印成员；console.table(o)</code></li>
<li>数组关联语法<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>()</span><br><span class="line"><span class="number">1.</span> 添加</span><br><span class="line">o[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;Jack&#x27;</span></span><br><span class="line">o[<span class="string">&#x27;age&#x27;</span>] = <span class="number">100</span></span><br><span class="line"><span class="built_in">console</span>.log(o[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="number">2.</span> 删除</span><br><span class="line"><span class="keyword">delete</span> o[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line"><span class="number">3.</span> 修改</span><br><span class="line">o[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span></span><br><span class="line"><span class="number">4.</span> 查询</span><br><span class="line"><span class="built_in">console</span>.log(o[<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></div></figure></li>
<li>tips<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这里相当于obj[&#x27;abc&#x27;] = &#x27;hello world&#x27;</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;</span><br><span class="line">obj.name = <span class="string">&#x27;Jack&#x27;</span></span><br><span class="line">obj[name] = <span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></div></figure></li>
<li>遍历对象<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">    <span class="attr">score</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key) <span class="comment">// 依次打印出成员名 类型 String</span></span><br><span class="line">    <span class="built_in">console</span>.log(obj[key]) <span class="comment">// 依次打印值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
</ul>
  <figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断一个成员是不是在这个对象里面</span></span><br><span class="line"><span class="built_in">console</span>.log(name <span class="keyword">in</span> obj) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> obj) <span class="comment">// true\</span></span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h3 id="数据类型存储区别"   >
          <a href="#数据类型存储区别" class="heading-link"><i class="fas fa-link"></i></a><a href="#数据类型存储区别" class="headerlink" title="数据类型存储区别"></a>数据类型存储区别</h3>
      <ul>
<li>基本数据类型与复杂数据类型存储上是有区别的</li>
<li>浏览器的一段存储空间<ul>
<li>栈内存</li>
<li>堆内存</li>
</ul>
</li>
<li>数据类型赋值之间的区别：<ol>
<li>基本数据类型：就是把变量存储的值直接赋值给另一个变量。</li>
<li>复杂数据类型：把变量地址给另一个变量</li>
<li>函数形参和实参的关系：调用的时候实参给形参赋值</li>
<li>函数返回值也是一种赋值</li>
</ol>
</li>
<li>函数也是对象  <figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;fn 函数&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(param) <span class="comment">// 出错</span></span><br><span class="line">&#125;</span><br><span class="line">fn.param = <span class="number">100</span> </span><br><span class="line">fn() <span class="comment">//出错</span></span><br><span class="line"><span class="comment">// fn() 和 fn.param 互不干扰</span></span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h3 id="数组"   >
          <a href="#数组" class="heading-link"><i class="fas fa-link"></i></a><a href="#数组" class="headerlink" title="数组"></a>数组</h3>
      <ol>
<li>字面量创建<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = []</span><br></pre></td></tr></table></div></figure></li>
<li>内置构造函数创建<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>()</span><br></pre></td></tr></table></div></figure></li>
<li>字面量添加变量<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>, <span class="string">&#x27;123&#x27;</span>]</span><br></pre></td></tr></table></div></figure></li>
<li>内置函数添加变量<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">100</span>) <span class="comment">// 一百个空值</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>) <span class="comment">//[10, 20, 30]</span></span><br></pre></td></tr></table></div></figure></li>
</ol>
<ul>
<li>数组操作<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">99</span>]) <span class="comment">//undefined</span></span><br><span class="line">arr.length = <span class="number">100</span> <span class="comment">// 数组长度强制设置为100，不够补空</span></span><br><span class="line">arr.length = <span class="number">1</span> <span class="comment">// 保留第一个，剩下的删除</span></span><br></pre></td></tr></table></div></figure>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span> ]</span><br><span class="line">arr.name = <span class="string">&#x27;Jack&#x27;</span></span><br><span class="line">arr.age = <span class="number">10</span></span><br><span class="line"><span class="comment">// name, age 不影响遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arr[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印成员名包括name, age</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
常用方法：<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">//按顺序追加到末尾</span></span><br><span class="line">arr.push(<span class="string">&#x27;add1&#x27;</span>, <span class="string">&#x27;add2&#x27;</span>, <span class="string">&#x27;add3&#x27;</span>)</span><br><span class="line"><span class="comment">// 删除数组最后一个数据，返回值：被删除的数据</span></span><br><span class="line">arr.pop()</span><br><span class="line"><span class="comment">// 从数组前面插入一些数据，返回值：插入数据后数组长度</span></span><br><span class="line">arr.unshift(<span class="string">&#x27;add1&#x27;</span>, <span class="string">&#x27;add2&#x27;</span>, <span class="string">&#x27;add3&#x27;</span>)</span><br><span class="line"><span class="comment">// 删除数组的最前面的一个数据，返回值：被删除的数据</span></span><br><span class="line">arr.shift()</span><br><span class="line"><span class="comment">// 反转数组，返回值：反转的数组</span></span><br><span class="line">arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">10</span>]</span><br><span class="line">arr.reverse()</span><br><span class="line"><span class="comment">// 按每一位数据的ASCII码数组排序，返回值：排序后的数组</span></span><br><span class="line">arr.sort()</span><br><span class="line"><span class="keyword">var</span> res = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">100</span>]</span><br><span class="line"><span class="keyword">var</span> res2 = res.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;<span class="keyword">return</span> a-b&#125;) <span class="comment">// 升序排序，b-a则是降序排序</span></span><br><span class="line"><span class="comment">// 返回截取的数据，并删除</span></span><br><span class="line">arr.splice(<span class="number">0</span>, <span class="number">1</span>) <span class="comment">//截取前2个</span></span><br><span class="line"><span class="comment">// 返回值：如果截取一个或多个数据，返回一个或多个数据；如果一个都不截取，返回空数组</span></span><br><span class="line">arr.splice(开始索引，截取个数，替换数据<span class="number">1</span>，替换数据<span class="number">2</span>，替换数据<span class="number">3</span>， 替换数据<span class="number">4.</span>.....)</span><br><span class="line"><span class="comment">// 返回值：追加好的数组，不改变原来的数组</span></span><br><span class="line">arr.concat(数组<span class="number">1</span>，数组<span class="number">2</span>)</span><br><span class="line"><span class="comment">// 返回值：获取的数组，不改变原来的数组，参数2可以不写也可以全不写</span></span><br><span class="line">arr.slice(开始索引，结束索引) </span><br><span class="line"><span class="comment">// 用连接字符连接数组中的元素，不改变原数组 返回值：字符串</span></span><br><span class="line"><span class="comment">// 正向查找，返回索引，如果没有返回-1</span></span><br><span class="line"><span class="keyword">var</span> i = indexOf(数据)</span><br><span class="line"><span class="keyword">var</span> i = indexOf(数据，<span class="number">1</span>) <span class="comment">// 从1开始找</span></span><br><span class="line"><span class="comment">//反向查找，类似上</span></span><br><span class="line"><span class="keyword">var</span> i = lastIndexOf(数据)</span><br><span class="line"><span class="keyword">var</span> i = lastIndexOf(数据，开始索引)</span><br><span class="line"><span class="comment">// 取代for循环遍历数组，没有返回值</span></span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123;&#125;)</span><br><span class="line">    <span class="comment">// item 数组的每一项</span></span><br><span class="line">    <span class="comment">// index 每一项的索引</span></span><br><span class="line">    <span class="comment">// arr 原始数组</span></span><br><span class="line"><span class="comment">// 映射数组，返回新数组，新数组长度和原数组一致</span></span><br><span class="line"><span class="keyword">var</span> res = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123; <span class="keyword">return</span> item*<span class="number">1.3</span> &#125;) <span class="comment">// 原理回看</span></span><br><span class="line"><span class="built_in">console</span>.log(res)</span><br><span class="line"><span class="comment">// 过滤原数组的数据，返回满足条件的项</span></span><br><span class="line"><span class="keyword">var</span> res = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123; <span class="keyword">return</span> item &gt; <span class="number">30</span> &#125;)</span><br><span class="line"><span class="comment">// 判断原数组中是否每一个都满足条件，返回值：一个布尔值</span></span><br><span class="line"><span class="keyword">var</span> res = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123; <span class="keyword">return</span> item &gt; <span class="number">30</span> &#125;)</span><br><span class="line"><span class="comment">// 判断原数组中是否有一个满足条件，返回值：一个布尔值</span></span><br><span class="line"><span class="keyword">var</span> res = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123; <span class="keyword">return</span> item &gt; <span class="number">30</span> &#125;)</span><br><span class="line"><span class="comment">// 用数组里面的数据替换数组里面的数据，返回值：</span></span><br><span class="line"><span class="keyword">var</span> res = arr.copyWithin(目标位置，开始索引，结束索引)</span><br><span class="line"><span class="comment">// 用指定内容填充数组，返回值：</span></span><br><span class="line"><span class="keyword">var</span> res = arr.fill(填充内容，开始索引，结束索引)</span><br><span class="line"><span class="comment">//查看数组里又没有该数据，返回值：一个布尔值</span></span><br><span class="line"><span class="keyword">var</span> res = arr.includes(数据)</span><br><span class="line"><span class="comment">// 拍平数组 降维，返回值：新数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>,</span><br><span class="line">[<span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>,</span><br><span class="line">[<span class="number">60</span>]]</span><br><span class="line"><span class="keyword">var</span> res = arr.flat(<span class="number">2</span>)</span><br><span class="line"><span class="comment">// var res = arr.flat(Infinity) // 无限</span></span><br><span class="line"><span class="comment">// 将原数组展平为新数组，该方法首先利用映射函数映射每个元素，然后将输入数组元素展平为一个新数组，返回值：新数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]</span><br><span class="line">arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123; <span class="keyword">return</span> [item] &#125;) <span class="comment">// [[10], [20], [30], [40]]</span></span><br><span class="line"><span class="keyword">var</span> res = flatMap(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123; <span class="keyword">return</span> [item] &#125;) <span class="comment">// [10, 20, 30, 40]</span></span><br><span class="line"><span class="comment">// 找到第一个满足条件的数据，返回值：找到的数据</span></span><br><span class="line"><span class="keyword">var</span> res = arr.find(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123; <span class="keyword">return</span> item &gt; <span class="number">20</span> &#125;) <span class="comment">// 40</span></span><br><span class="line"><span class="comment">// 找到第一个满足条件的数据，返回值：数据索引</span></span><br><span class="line"><span class="keyword">var</span> res = arr.findIndex(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;<span class="keyword">return</span> item &gt;<span class="number">30</span> &#125;) <span class="comment">// 7</span></span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h3 id="字符串"   >
          <a href="#字符串" class="heading-link"><i class="fas fa-link"></i></a><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3>
      <ol>
<li>创建<figure class="highlight javascript"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 两种方式除了在控制台上打印没有任何区别</span></span><br><span class="line">str1 = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">str2 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br></pre></td></tr></table></div></figure></li>
<li>字符串一个包装数据类型，一个数据当你的使用的时候会转换成复杂数据类型，使用完毕自动转换成基本数据类型，开辟的堆栈的临时空间自动销毁。<br> 点语法： <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">str.length</span><br><span class="line">str.toString()</span><br></pre></td></tr></table></div></figure></li>
<li>字符串操作<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 拼接</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line">str += <span class="string">&#x27;d&#x27;</span></span><br><span class="line"><span class="comment">// 遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++ )&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(str[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;abcdefg&#x27;</span></span><br><span class="line"><span class="comment">// 返回值：字符</span></span><br><span class="line"><span class="keyword">var</span> res = str.charAt(索引)</span><br><span class="line"><span class="comment">// 返回值：该字符的编码（utf-8）</span></span><br><span class="line"><span class="keyword">var</span> res = str.charCodeAt(索引)</span><br><span class="line"><span class="comment">// 返回值：截取出来的字符串</span></span><br><span class="line"><span class="keyword">var</span> res = str.substr(开始索引，个数)</span><br><span class="line"><span class="comment">// 返回值：截取的字符串</span></span><br><span class="line"><span class="keyword">var</span> res = str.substring(开始索引，结束索引)</span><br><span class="line"><span class="comment">// 返回值：转换好小写字母的字符串</span></span><br><span class="line"><span class="keyword">var</span> res = str.toLowerCase</span><br><span class="line"><span class="comment">// 返回值：转换大写字母</span></span><br><span class="line"><span class="keyword">var</span> res = str.toUpperCase()</span><br><span class="line"><span class="comment">// 返回值：替换好的字符串 只能替换第一个</span></span><br><span class="line"><span class="keyword">var</span> res = str.replace(被替换字符，替换字符)</span><br><span class="line"><span class="comment">// 返回值：拼接字符串</span></span><br><span class="line"><span class="keyword">var</span> res = str.concat(字符串)</span><br><span class="line"><span class="comment">// 返回值：截取字符串，可以加负整数 = length + 负整数</span></span><br><span class="line"><span class="keyword">var</span> res = str.slice(开始索引，结束索引)</span><br><span class="line"><span class="comment">// 返回值：分割的字符串，个数选填</span></span><br><span class="line"><span class="keyword">var</span> res = str.split(分割字符，个数)</span><br><span class="line"><span class="comment">// 返回值：字符串索引，没有返回-1</span></span><br><span class="line"><span class="keyword">var</span> res = str.indexOf(字符串)</span><br><span class="line"><span class="keyword">var</span> res = str.indexOf(字符串，开始索引)</span><br><span class="line"><span class="comment">// 从后往前找，没有返回-1</span></span><br><span class="line"><span class="keyword">var</span> res = str.lastIndexOf(字符串)</span><br><span class="line"><span class="comment">// 返回值：布尔值，字符串里是否有该字符串</span></span><br><span class="line"><span class="keyword">var</span> res = str.includes(字符串)</span><br><span class="line"><span class="comment">//  返回值：指定索引，没有则返回-1</span></span><br><span class="line"><span class="keyword">var</span> res = str.search(字符串)</span><br><span class="line"><span class="comment">// 匹配字符串，作用是传递正则，返回一个数组，包含索引，原字符串等</span></span><br><span class="line"><span class="keyword">var</span> res = str.match(<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"><span class="comment">// 去除首尾空格</span></span><br><span class="line"><span class="keyword">var</span> res = str.trim()</span><br><span class="line"><span class="comment">// 去除开头空格</span></span><br><span class="line"><span class="keyword">var</span> res = str.trimStart()</span><br><span class="line"><span class="comment">// 去除尾部空格</span></span><br><span class="line"><span class="keyword">var</span> res = str.trimEnd()</span><br><span class="line"><span class="comment">// 从前面补全字符串</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&quot;1234&quot;</span></span><br><span class="line"><span class="keyword">var</span> res = str1.padStart(目标长度，填充字符)</span><br><span class="line"><span class="comment">// 从后面补全字符串</span></span><br><span class="line">padEnd()</span><br><span class="line"><span class="comment">// 返回值：布尔值，判断是否是以这个字符串开始</span></span><br><span class="line"><span class="keyword">var</span> res = str.startsWith(字符串)</span><br><span class="line"><span class="comment">// 相反的</span></span><br><span class="line">endswith()</span><br><span class="line"><span class="comment">// 转换成小号字符串,返回值：&lt;small&gt;字符串&lt;small&gt;</span></span><br><span class="line"><span class="keyword">var</span> res = str.small()</span><br><span class="line"><span class="comment">// 相反的</span></span><br><span class="line">big()</span><br><span class="line"><span class="comment">// 加粗显示</span></span><br><span class="line">blod()</span><br><span class="line"><span class="comment">// 指定字符串大小</span></span><br><span class="line"><span class="keyword">var</span> res = str.fontSize(尺寸) </span><br><span class="line"><span class="comment">// 只当字符串颜色</span></span><br><span class="line"><span class="keyword">var</span> res = str.fontColor(颜色)</span><br><span class="line"><span class="comment">// 拼接字符串方案</span></span><br><span class="line"><span class="comment">// 隐藏关键字方案</span></span><br><span class="line"><span class="comment">// 字符串计数</span></span><br></pre></td></tr></table></div></figure></li>
<li>模板字符串<br> <br/>反引号括起来的字符串<ul>
<li>单引号和双引号定义的字符串不能换行，模板字符串可以换行，可以写和HTML结构  </li>
<li>解析变量<br>模板字符串添加 <code>$&#123;变量&#125;</code></li>
<li>兼容性<br>ES6语法，IE低版本不支持</li>
</ul>
</li>
</ol>

        <h3 id="json格式"   >
          <a href="#json格式" class="heading-link"><i class="fas fa-link"></i></a><a href="#json格式" class="headerlink" title="json格式"></a>json格式</h3>
      <ul>
<li>把JS数组或对象转换成json格式<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonStr = <span class="built_in">JSON</span>.stringigy(转换对象)</span><br></pre></td></tr></table></div></figure></li>
<li>把JSON格式的字符出转换成JS的数组或对象<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(要转换的<span class="built_in">JSON</span>字符串)</span><br></pre></td></tr></table></div></figure>
<ul>
<li>json文件</li>
</ul>
</li>
</ul>

        <h3 id="本地缓存"   >
          <a href="#本地缓存" class="heading-link"><i class="fas fa-link"></i></a><a href="#本地缓存" class="headerlink" title="本地缓存"></a>本地缓存</h3>
      <ul>
<li>localStorage<br/><br><code>永久缓存，除非手动删除</code><figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 存储一条数据</span></span><br><span class="line"><span class="built_in">localStorage</span>.setItem(键，值)</span><br><span class="line"><span class="comment">// 获取key的数据</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">localStorage</span>.getItem(键)</span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="built_in">localStorage</span>.removeItem(键)</span><br><span class="line"><span class="comment">// 清除</span></span><br><span class="line"><span class="built_in">localStorage</span>.clear()</span><br></pre></td></tr></table></div></figure></li>
<li>sessionStorage<br/><br><code>会话缓存，关闭浏览器就没了</code><figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 存储一条数据</span></span><br><span class="line">sessionStorage.setItem(键，值)</span><br><span class="line"><span class="comment">// 获取key的数据</span></span><br><span class="line"><span class="keyword">var</span> res = sessionStorage.getItem(键)</span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">sessionStorage.removeItem(键)</span><br><span class="line"><span class="comment">// 清除</span></span><br><span class="line">sessionStorage.clear()</span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h3 id="数学方法"   >
          <a href="#数学方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#数学方法" class="headerlink" title="数学方法"></a>数学方法</h3>
      <ul>
<li>Math 方法<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 0~1 之间的随即小数</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.ramdom()</span><br><span class="line"><span class="comment">// 四舍五入取整</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.round(数字)</span><br><span class="line"><span class="comment">// 向上取整后的数字</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.ceil(数字)</span><br><span class="line"><span class="comment">// 向下取整</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.floor(数字)</span><br><span class="line"><span class="comment">// 取幂</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.pow(数字，次幂)</span><br><span class="line"><span class="comment">// 算术平方根</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.sqrt(数字)</span><br><span class="line"><span class="comment">// 绝对值</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.absd(数字)</span><br><span class="line"><span class="comment">// 最大值，传入多个数字，不适用于数组</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.max(数字<span class="number">1</span>，数字<span class="number">2</span>，数字<span class="number">3</span>，...)</span><br><span class="line"><span class="comment">// 最小值，</span></span><br><span class="line"><span class="built_in">Math</span>.min()</span><br><span class="line"><span class="comment">//圆周率</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="built_in">Math</span>.PI</span><br></pre></td></tr></table></div></figure></li>
<li>进制转换<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span></span><br><span class="line"><span class="comment">// 十进制转其他进制</span></span><br><span class="line"><span class="comment">// 转换为八进制</span></span><br><span class="line"><span class="keyword">var</span> res = toString(num, <span class="number">8</span>)</span><br><span class="line"><span class="comment">// 其他进制转十进制</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">144</span> <span class="comment">//八进制数</span></span><br><span class="line"><span class="comment">// 八进制转十进制</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="built_in">parseInt</span>(num, <span class="number">8</span>)</span><br></pre></td></tr></table></div></figure></li>
<li>保留小数<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">123.4567890</span></span><br><span class="line"><span class="keyword">var</span> res = toFixed(<span class="number">2</span>) <span class="comment">// 保留2位小数</span></span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Multimedia(3):Audio &amp; Video</title>
    <url>/2021/07/20/Android/Multimedia(3)%EA%9E%89Audio%20&amp;%20Video/</url>
    <content><![CDATA[
        <h1 id="Multimedia-3-Audio-amp-Video"   >
          <a href="#Multimedia-3-Audio-amp-Video" class="heading-link"><i class="fas fa-link"></i></a><a href="#Multimedia-3-Audio-amp-Video" class="headerlink" title="Multimedia(3):Audio &amp; Video"></a>Multimedia(3):Audio &amp; Video</h1>
      ]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 基础(3)</title>
    <url>/2021/07/20/Web/js-03/</url>
    <content><![CDATA[
        <h3 id="BOM"   >
          <a href="#BOM" class="heading-link"><i class="fas fa-link"></i></a><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h3>
      
        <h4 id="浏览器窗口尺寸"   >
          <a href="#浏览器窗口尺寸" class="heading-link"><i class="fas fa-link"></i></a><a href="#浏览器窗口尺寸" class="headerlink" title="浏览器窗口尺寸"></a>浏览器窗口尺寸</h4>
      <ul>
<li>两个属性：<ol>
<li>innerWidth</li>
<li>innnerHeight</li>
</ol>
</li>
<li>共同点：包含滚动条的尺寸，除了Mac的Safari</li>
</ul>

        <h4 id="浏览器弹出层"   >
          <a href="#浏览器弹出层" class="heading-link"><i class="fas fa-link"></i></a><a href="#浏览器弹出层" class="headerlink" title="浏览器弹出层"></a>浏览器弹出层</h4>
      <ol>
<li>alert(‘提示文本’)</li>
<li>confirm(‘提示文本’)</li>
<li>prompt(‘提示文本’)</li>
</ol>
<ul>
<li>共同点：阻断程序后续执行（js 是单线程）<span id="more"></span></li>
</ul>

        <h4 id="浏览器的历史记录"   >
          <a href="#浏览器的历史记录" class="heading-link"><i class="fas fa-link"></i></a><a href="#浏览器的历史记录" class="headerlink" title="浏览器的历史记录"></a>浏览器的历史记录</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.history.back()</span><br></pre></td></tr></table></div></figure>
<ul>
<li>方法<ol>
<li>back()</li>
<li>forward()</li>
<li>go(整数) ：负数是后退，0 是刷新当前页面，正整数前进</li>
</ol>
</li>
</ul>

        <h4 id="浏览器版本信息"   >
          <a href="#浏览器版本信息" class="heading-link"><i class="fas fa-link"></i></a><a href="#浏览器版本信息" class="headerlink" title="浏览器版本信息"></a>浏览器版本信息</h4>
      <p>window 的 navigator 成员，是一个对象，存储着浏览器的版本信息</p>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.nevigator.userAgent</span><br></pre></td></tr></table></div></figure>
<ol>
<li>userAgent</li>
<li>appName  </li>
<li>platform</li>
</ol>

        <h4 id="浏览器常见事件"   >
          <a href="#浏览器常见事件" class="heading-link"><i class="fas fa-link"></i></a><a href="#浏览器常见事件" class="headerlink" title="浏览器常见事件"></a>浏览器常见事件</h4>
      <ol>
<li>onload<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="title">functio</span>(<span class="params"></span>)</span>&#123;&#125; </span><br><span class="line">当所有资源加载完毕执行</span><br><span class="line">放在head标签里面</span><br></pre></td></tr></table></div></figure></li>
<li>onscroll：滚动条滚动就触发</li>
<li>onresize：可视窗口改变的时候触发，结合innerWidth和innerHeight</li>
</ol>

        <h4 id="卷去的高度和宽度"   >
          <a href="#卷去的高度和宽度" class="heading-link"><i class="fas fa-link"></i></a><a href="#卷去的高度和宽度" class="headerlink" title="卷去的高度和宽度"></a>卷去的高度和宽度</h4>
      <ul>
<li>高度</li>
</ul>
<ol>
<li>document.documentElement.scrollTop：必须有Document标签</li>
<li>document.body.scrollTop：必须没有Document标签</li>
<li>兼容写法</li>
</ol>
<ul>
<li>宽度</li>
</ul>
<ol>
<li>document.documentElement.scrollLeft</li>
<li>document.body.scrollLeft</li>
<li>兼容写法</li>
</ol>

        <h4 id="滚动到坐标"   >
          <a href="#滚动到坐标" class="heading-link"><i class="fas fa-link"></i></a><a href="#滚动到坐标" class="headerlink" title="滚动到坐标"></a>滚动到坐标</h4>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="built_in">window</span>.scrollTo(横坐标，纵坐标) <span class="comment">// 两个参数</span></span><br><span class="line"><span class="number">2.</span> <span class="built_in">window</span>.scrollTo(&#123;</span><br><span class="line">    <span class="attr">top</span>:纵坐标</span><br><span class="line">    <span class="attr">left</span>:横坐标</span><br><span class="line">    <span class="attr">behavior</span>: <span class="string">&#x27;smooth&#x27;</span> <span class="comment">// 决定是平滑定位还是瞬时定位 &#x27;instant&#x27;</span></span><br><span class="line">&#125;) <span class="comment">// 参数个数随意</span></span><br></pre></td></tr></table></div></figure>
<p><code>让浏览器自己滚动到顶部</code></p>

        <h3 id="DOM"   >
          <a href="#DOM" class="heading-link"><i class="fas fa-link"></i></a><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3>
      
        <h4 id="获取DOM元素"   >
          <a href="#获取DOM元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取DOM元素" class="headerlink" title="获取DOM元素"></a>获取DOM元素</h4>
      <ul>
<li>非常规标签</li>
</ul>
<ol>
<li>document.documentElement</li>
<li>document.head</li>
<li>document.body</li>
</ol>
<ul>
<li>常规标签  </li>
</ul>
<ol>
<li>getElementById()<br>查找范围：documenst或一个元素，返回一个元素或null</li>
<li>getElementsByTagName()<br>返回值：一个伪数组或空的伪数组 </li>
<li>getElementsByClassName()<br>返回值：一个伪数组</li>
<li>getElemensByName()</li>
<li>querySelector(‘选择器’)<br>返回值：css里面找到的第一个内容或null</li>
<li>querySelectorAll(‘选择器’)<br>返回值：一个伪数组或空的</li>
</ol>

        <h4 id="操作元素属性"   >
          <a href="#操作元素属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#操作元素属性" class="headerlink" title="操作元素属性"></a>操作元素属性</h4>
      <ul>
<li>元素属性：原生属性、自定义属性、H5自定义属性（data-xxx）</li>
<li>原生属性：<br>读取值：元素.属性名<br>设置值：元素.属性名 = 值</li>
<li>自定义属性：不能点操作</li>
</ul>
<ol>
<li>getAttribute(‘属性名’)</li>
<li>setAttribute(‘属性名’, ‘值’)</li>
<li>removeAttribute(‘属性名’)</li>
<li>不管设置什么数据类型，打印的类型都是string</li>
</ol>
<ul>
<li>H5 自定义属性：<br>每个元素都有一个属性dataset，里面包含了所有H5 自定义属性；key 是除了 data- 外的内容叫名字，value 是值。操作：元素.dataset.key</li>
<li>操作元素类名</li>
</ul>
<ol>
<li>设置、修改类名：元素.className = “类名”</li>
<li>追加类名：新类名前加空格</li>
<li>删除：字符切割，再写一遍<ul>
<li>H5 方式操作：</li>
<li>有一个属性：classList</li>
<li>方法：add(): div.classList.add(‘新类名’)</li>
<li>其他方法：remove() toggle()</li>
</ul>
</li>
</ol>

        <h4 id="操作文本内容"   >
          <a href="#操作文本内容" class="heading-link"><i class="fas fa-link"></i></a><a href="#操作文本内容" class="headerlink" title="操作文本内容"></a>操作文本内容</h4>
      <ol>
<li>innerHTML</li>
<li>innerText</li>
<li>value</li>
</ol>

        <h4 id="操作元素样式"   >
          <a href="#操作元素样式" class="heading-link"><i class="fas fa-link"></i></a><a href="#操作元素样式" class="headerlink" title="操作元素样式"></a>操作元素样式</h4>
      <ul>
<li>获取行内样式：<br>元素.style，获取到一个对象，包含所有的可设置样式。</li>
<li>获取非行内样式：</li>
</ul>
<ol>
<li>window.getComputedStyle()方法，返回值：一个对象，可以访问里面的对象</li>
<li>currentStyle 属性 IE低版本</li>
</ol>
<ul>
<li>当使用点语法时候，带中划线的样式要转化成驼峰的方式或数组关联法</li>
<li>JS不能操作HTML文件和方CSS文件</li>
</ul>

        <h3 id="DOM-节点"   >
          <a href="#DOM-节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#DOM-节点" class="headerlink" title="DOM 节点"></a>DOM 节点</h3>
      <p>元素节点、属性节点、文本节点、注释节点</p>

        <h4 id="获取节点"   >
          <a href="#获取节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取节点" class="headerlink" title="获取节点"></a>获取节点</h4>
      <ol>
<li>childNodes: 元素.childNodes，元素的所有子节点</li>
<li>children: 元素的所有子元素节点</li>
<li>firstChild: 元素的第一个节点</li>
<li>firstElementChild: 元素的第一个子元素节点</li>
<li>lastChild    </li>
<li>lastElementChild</li>
<li>previousSibling: 元素的上一个兄弟节点</li>
<li>previousElementSibing: 元素的上一个兄弟元素节点</li>
<li>nextSibling: 元素的下一个兄弟节点</li>
<li>nextElementSibling: 元素的下一个兄弟元素节点</li>
<li>parentNode: 元素的父节点</li>
<li>parentElement: 元素的父元素节点</li>
<li>attributes: 该元素的所有属性节点</li>
</ol>

        <h4 id="节点属性"   >
          <a href="#节点属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#节点属性" class="headerlink" title="节点属性"></a>节点属性</h4>
      <p>描述该节点的信息</p>
<ol>
<li>nodeType：一种节点的编号</li>
<li>nodeName：节点名称</li>
<li>nodeValue：节点的值</li>
</ol>

        <h4 id="创建节点"   >
          <a href="#创建节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h4>
      <ol>
<li>createElement(‘便签名’): 返回一个元素节点</li>
<li>createTextNode(‘文本内容’)：返回一个文本节点，不是字符串</li>
<li>createComment(‘注释内容’)</li>
<li>createAttribute(‘属性名’): 返回一个属性节点，可以把它加到元素上</li>
</ol>

        <h4 id="插入节点"   >
          <a href="#插入节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h4>
      <ol>
<li>appendChild(): 父节点.appendChild(子节点)，放在最后一个子节点的位置</li>
<li>insertBefore()</li>
</ol>

        <h4 id="删除节点"   >
          <a href="#删除节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h4>
      <ol>
<li>removeChild(): 父节点.removeChild(子节点)</li>
<li>remove(): 节点.remove()，把自己移出父节点</li>
</ol>

        <h4 id="替换节点"   >
          <a href="#替换节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#替换节点" class="headerlink" title="替换节点"></a>替换节点</h4>
      <ol>
<li>replaceChild(): 父节点.replaceChild(新节点，旧节点)</li>
</ol>

        <h4 id="克隆节点"   >
          <a href="#克隆节点" class="heading-link"><i class="fas fa-link"></i></a><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h4>
      <ol>
<li>cloneNode(): 节点.cloneNode(布尔值)，默认是false 不克隆后代节点。返回一个克隆好的节点</li>
</ol>
]]></content>
      <categories>
        <category>Web</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>ffmpeg</title>
    <url>/2021/07/20/other/Clips_ffmpeg/</url>
    <content><![CDATA[
        <h3 id="提取并转换音频格式"   >
          <a href="#提取并转换音频格式" class="heading-link"><i class="fas fa-link"></i></a><a href="#提取并转换音频格式" class="headerlink" title="提取并转换音频格式"></a>提取并转换音频格式</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">ffmpeg -i mavel4.mp4 -acodec copy -vn m.m4a</span><br><span class="line">ffmpeg -i m.m4a m.mp3</span><br></pre></td></tr></table></div></figure>

]]></content>
      <categories>
        <category>other</category>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 基础(2)</title>
    <url>/2020/03/28/Web/js-02/</url>
    <content><![CDATA[
        <h3 id="获取时间对象"   >
          <a href="#获取时间对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取时间对象" class="headerlink" title="获取时间对象"></a>获取时间对象</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 当前时间对象</span></span><br><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="comment">// 创建指定时间</span></span><br><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2030</span>, <span class="number">11</span>) <span class="comment">// 至少2个参数，除了年之外每个数字自动进位</span></span><br><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2090/11/29 12/34/14&#x27;</span>) <span class="comment">// 还可以传入：yyyy-mm-dd HH-MM-SS</span></span><br></pre></td></tr></table></div></figure>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="keyword">var</span> year = getFullYear() <span class="comment">// 年</span></span><br><span class="line">getMonth() <span class="comment">// 月</span></span><br><span class="line">getDate() <span class="comment">// 日</span></span><br><span class="line">getHours() <span class="comment">// 时</span></span><br><span class="line">getminutes() <span class="comment">// 分</span></span><br><span class="line">getSeconds() <span class="comment">// 秒</span></span><br><span class="line">getMilliseconds() <span class="comment">//毫秒</span></span><br><span class="line">getDay() <span class="comment">// 星期几，number类型，0 是周日</span></span><br><span class="line"><span class="comment">// 时间戳</span></span><br><span class="line">getTime()</span><br><span class="line"><span class="comment">//获取世界标准时间</span></span><br><span class="line">getUTCFullyear()</span><br><span class="line">...</span><br><span class="line">getUTCmilliseconds()</span><br></pre></td></tr></table></div></figure>
<span id="more"></span>

<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> time = <span class="built_in">Date</span>()</span><br><span class="line">setFullyear() <span class="comment">// 设置 年</span></span><br><span class="line">setMonth() <span class="comment">// 月</span></span><br><span class="line">...</span><br><span class="line">setMilliseconds() </span><br><span class="line"></span><br><span class="line">setTime(时间戳)</span><br></pre></td></tr></table></div></figure>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取时间差</span></span><br><span class="line"><span class="keyword">var</span> time1 = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="keyword">var</span> time2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2010</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">18</span>, <span class="number">30</span>, <span class="number">00</span>)</span><br><span class="line"><span class="keyword">var</span> diffTime = time1.getTime() - time2.getTime() <span class="comment">// 转换后可以取绝对值</span></span><br><span class="line"><span class="comment">// 换算：diffTime 对应对应倍率</span></span><br></pre></td></tr></table></div></figure>

        <h3 id="获取随机数"   >
          <a href="#获取随机数" class="heading-link"><i class="fas fa-link"></i></a><a href="#获取随机数" class="headerlink" title="获取随机数"></a>获取随机数</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// n ~ m 范围内取整数</span></span><br><span class="line"><span class="keyword">var</span> n = <span class="number">10</span></span><br><span class="line"><span class="keyword">var</span> m = <span class="number">20</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;<span class="number">100000</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> res = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * (m - n + <span class="number">1</span>) + n)</span><br><span class="line">    <span class="keyword">if</span>(obj[res]) &#123;</span><br><span class="line">        obj[res]++</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        obj[res] = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(obj)</span><br></pre></td></tr></table></div></figure>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 随机颜色</span></span><br><span class="line"><span class="comment">// 表示方式：</span></span><br><span class="line"><span class="number">1.</span> rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line"><span class="number">2.</span> #FFFFFF</span><br><span class="line"><span class="comment">// 利用上面的随机数生成方法和toString()等方法生成随机颜色</span></span><br></pre></td></tr></table></div></figure>

        <h3 id="定时器"   >
          <a href="#定时器" class="heading-link"><i class="fas fa-link"></i></a><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3>
      <ul>
<li>单线程：代码从上到下执行<br/></li>
<li>同步异步：<ol>
<li>死循环后面的代码都不执行</li>
<li>WebApi 的队列机制（单线程异步）</li>
<li>异步：不会立即执行的代码，放到队列里先不执行。</li>
</ol>
</li>
<li>JS 的两个定时器<ol>
<li>setTimeout(函数，时间ms)<br/><br>时间到的时候，执行一遍函数在结束</li>
<li>setInterval(函数，时间ms)<br/><br>每隔一段时间，执行一遍函数</li>
<li>定时器的返回值表示第几个定时器，不分类别；用来关闭定时器：<code>clearTimeout(返回值)</code>和<code>clearInterval(返回值)</code>不分种类<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 异步机制</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;start&#x27;</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;setTimeout&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;end&#x27;</span>)</span><br></pre></td></tr></table></div></figure>
<code>tips: setInterval(函数名(), 时间) &#39;函数名()&#39;表示写的时候就执行了，而&#39;函数名&#39;表示的是一个变量，存储着函数的地址</code></li>
</ol>
</li>
</ul>

        <h3 id="格式化时间"   >
          <a href="#格式化时间" class="heading-link"><i class="fas fa-link"></i></a><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h3>
      ]]></content>
      <categories>
        <category>Web</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/2021/07/20/other/Clips_Linux/</url>
    <content><![CDATA[
        <h1 id="Clips-Linux"   >
          <a href="#Clips-Linux" class="heading-link"><i class="fas fa-link"></i></a><a href="#Clips-Linux" class="headerlink" title="Clips_Linux"></a>Clips_Linux</h1>
      <ul>
<li>scp<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">scp -r -P [port] [remote] [local] # 下载</span><br><span class="line">scp -r -P [port] [local] [remote] # 上传</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>other</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>h3c</title>
    <url>/2021/07/20/other/Clips_h3c/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>other</category>
        <category>h3c</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>h3c</tag>
      </tags>
  </entry>
  <entry>
    <title>javaweb</title>
    <url>/2021/07/20/other/Clips_javaweb/</url>
    <content><![CDATA[
        <h3 id="Map"   >
          <a href="#Map" class="heading-link"><i class="fas fa-link"></i></a><a href="#Map" class="headerlink" title="Map()"></a>Map()</h3>
      
        <h3 id="MySQL"   >
          <a href="#MySQL" class="heading-link"><i class="fas fa-link"></i></a><a href="#MySQL" class="headerlink" title="MySQL:"></a>MySQL:</h3>
      <ul>
<li>update<figure class="highlight sql"><div class="table-container"><table><tr><td class="code"><pre><span class="line">UPDATE `users` <span class="keyword">SET</span> `username`<span class="operator">=</span><span class="string">&#x27;xm&#x27;</span>, `password`<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span> <span class="keyword">WHERE</span> (`id`<span class="operator">=</span><span class="string">&#x27;4&#x27;</span>) LIMIT <span class="number">1</span></span><br></pre></td></tr></table></div></figure></li>
<li>insert<figure class="highlight sql"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users`  (id, username, password, name, sex, birthday, place, phone, email) <span class="keyword">VALUES</span>(<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;xm&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;Xiaoming&#x27;</span>,<span class="string">&#x27;female&#x27;</span>,<span class="string">&#x27;2022-08-23&#x27;</span>,<span class="string">&#x27;Hen, Zijie, GD&#x27;</span>,<span class="string">&#x27;19207673341&#x27;</span>,<span class="string">&#x27;abc@gmail.com&#x27;</span>)</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>other</category>
        <category>Java Web</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>javaweb</tag>
      </tags>
  </entry>
  <entry>
    <title>termux</title>
    <url>/2021/07/20/other/Clips_termux/</url>
    <content><![CDATA[
        <h3 id="换源"   >
          <a href="#换源" class="heading-link"><i class="fas fa-link"></i></a><a href="#换源" class="headerlink" title="换源"></a>换源</h3>
      <p>export EDITOR=nano<br>apt edit-source</p>

        <h3 id="。。。"   >
          <a href="#。。。" class="heading-link"><i class="fas fa-link"></i></a><a href="#。。。" class="headerlink" title="。。。"></a>。。。</h3>
      ]]></content>
      <categories>
        <category>other</category>
        <category>termux</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>termux</tag>
      </tags>
  </entry>
  <entry>
    <title>win</title>
    <url>/2021/07/20/other/Clips_win/</url>
    <content><![CDATA[
        <h3 id="找到占用某个端口的进程"   >
          <a href="#找到占用某个端口的进程" class="heading-link"><i class="fas fa-link"></i></a><a href="#找到占用某个端口的进程" class="headerlink" title="找到占用某个端口的进程"></a>找到占用某个端口的进程</h3>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">netstat -ano # 列出所有端口</span><br><span class="line"></span><br><span class="line">netstat -aon|findstr &quot;443&quot; # 查看对应端口对应的PID</span><br><span class="line"></span><br><span class="line">tasklist|findstr &quot;2720&quot; # 根据PID找到对应的进程</span><br><span class="line"></span><br><span class="line">taskkill /f /t /im Tencentdl.exe # 结束该进程</span><br></pre></td></tr></table></div></figure>]]></content>
      <categories>
        <category>other</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>win</tag>
      </tags>
  </entry>
  <entry>
    <title>Signal Android</title>
    <url>/2021/07/20/other/Signal%20Android/</url>
    <content><![CDATA[
        <h1 id="Signal-Android"   >
          <a href="#Signal-Android" class="heading-link"><i class="fas fa-link"></i></a><a href="#Signal-Android" class="headerlink" title="Signal Android"></a>Signal Android</h1>
      <p>Signal is a messaging app for simple private communication with friends.</p>
<p>Signal uses your phone’s data connection (WiFi/3G/4G) to communicate securely, optionally supports plain SMS/MMS to function as a unified messenger, and can also encrypt the stored messages on your phone.</p>
<p>Currently available on the Play store.</p>
<span id="more"></span>

<p><a href='https://play.google.com/store/apps/details?id=org.thoughtcrime.securesms&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' height='80px'/></a></p>

        <h2 id="Contributing-Bug-reports"   >
          <a href="#Contributing-Bug-reports" class="heading-link"><i class="fas fa-link"></i></a><a href="#Contributing-Bug-reports" class="headerlink" title="Contributing Bug reports"></a>Contributing Bug reports</h2>
      <p>We use GitHub for bug tracking. Please search the existing issues for your bug and create a new one if the issue is not yet tracked!</p>
<p><span class="exturl"><a class="exturl__link"   href="https://github.com/signalapp/Signal-Android/issues" >https://github.com/signalapp/Signal-Android/issues</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="Joining-the-Beta"   >
          <a href="#Joining-the-Beta" class="heading-link"><i class="fas fa-link"></i></a><a href="#Joining-the-Beta" class="headerlink" title="Joining the Beta"></a>Joining the Beta</h2>
      <p>Want to live life on the bleeding edge and help out with testing?</p>
<p>You can subscribe to Signal Android Beta releases here:<br><span class="exturl"><a class="exturl__link"   href="https://play.google.com/apps/testing/org.thoughtcrime.securesms" >https://play.google.com/apps/testing/org.thoughtcrime.securesms</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<p>If you’re interested in a life of peace and tranquility, stick with the standard releases.</p>

        <h2 id="Contributing-Translations"   >
          <a href="#Contributing-Translations" class="heading-link"><i class="fas fa-link"></i></a><a href="#Contributing-Translations" class="headerlink" title="Contributing Translations"></a>Contributing Translations</h2>
      <p>Interested in helping to translate Signal? Contribute here:</p>
<p><span class="exturl"><a class="exturl__link"   href="https://www.transifex.com/projects/p/signal-android/" >https://www.transifex.com/projects/p/signal-android/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="Contributing-Code"   >
          <a href="#Contributing-Code" class="heading-link"><i class="fas fa-link"></i></a><a href="#Contributing-Code" class="headerlink" title="Contributing Code"></a>Contributing Code</h2>
      <p>If you’re new to the Signal codebase, we recommend going through our issues and picking out a simple bug to fix (check the “easy” label in our issues) in order to get yourself familiar. Also please have a look at the <span class="exturl"><a class="exturl__link"   href="https://github.com/signalapp/Signal-Android/blob/master/CONTRIBUTING.md" >CONTRIBUTING.md</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>, that might answer some of your questions.</p>
<p>For larger changes and feature ideas, we ask that you propose it on the <span class="exturl"><a class="exturl__link"   href="https://community.signalusers.org/" >unofficial Community Forum</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for a high-level discussion with the wider community before implementation.</p>

        <h2 id="Contributing-Ideas"   >
          <a href="#Contributing-Ideas" class="heading-link"><i class="fas fa-link"></i></a><a href="#Contributing-Ideas" class="headerlink" title="Contributing Ideas"></a>Contributing Ideas</h2>
      <p>Have something you want to say about Open Whisper Systems projects or want to be part of the conversation? Get involved in the <span class="exturl"><a class="exturl__link"   href="https://community.signalusers.org/" >community forum</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p>

        <h1 id="Help"   >
          <a href="#Help" class="heading-link"><i class="fas fa-link"></i></a><a href="#Help" class="headerlink" title="Help"></a>Help</h1>
      
        <h2 id="Support"   >
          <a href="#Support" class="heading-link"><i class="fas fa-link"></i></a><a href="#Support" class="headerlink" title="Support"></a>Support</h2>
      <p>For troubleshooting and questions, please visit our support center!</p>
<p><span class="exturl"><a class="exturl__link"   href="https://support.signal.org/" >https://support.signal.org/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h2 id="Documentation"   >
          <a href="#Documentation" class="heading-link"><i class="fas fa-link"></i></a><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2>
      <p>Looking for documentation? Check out the wiki!</p>
<p><span class="exturl"><a class="exturl__link"   href="https://github.com/signalapp/Signal-Android/wiki" >https://github.com/signalapp/Signal-Android/wiki</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h1 id="Legal-things"   >
          <a href="#Legal-things" class="heading-link"><i class="fas fa-link"></i></a><a href="#Legal-things" class="headerlink" title="Legal things"></a>Legal things</h1>
      
        <h2 id="Cryptography-Notice"   >
          <a href="#Cryptography-Notice" class="heading-link"><i class="fas fa-link"></i></a><a href="#Cryptography-Notice" class="headerlink" title="Cryptography Notice"></a>Cryptography Notice</h2>
      <p>This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software.<br>BEFORE using any encryption software, please check your country’s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted.<br>See <span class="exturl"><a class="exturl__link"   href="http://www.wassenaar.org/" >http://www.wassenaar.org/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more information.</p>
<p>The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms.<br>The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.</p>

        <h2 id="License"   >
          <a href="#License" class="heading-link"><i class="fas fa-link"></i></a><a href="#License" class="headerlink" title="License"></a>License</h2>
      <p>Copyright 2013-2020 Signal</p>
<p>Licensed under the GPLv3: <span class="exturl"><a class="exturl__link"   href="http://www.gnu.org/licenses/gpl-3.0.html" >http://www.gnu.org/licenses/gpl-3.0.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<p>Google Play and the Google Play logo are trademarks of Google Inc.</p>
]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>Signal Android</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2021/07/20/other/git/</url>
    <content><![CDATA[
        <h1 id="git"   >
          <a href="#git" class="heading-link"><i class="fas fa-link"></i></a><a href="#git" class="headerlink" title="git"></a>git</h1>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;comment...&quot;</span><br><span class="line">git pull </span><br></pre></td></tr></table></div></figure>


        <h1 id="实用命令汇总"   >
          <a href="#实用命令汇总" class="heading-link"><i class="fas fa-link"></i></a><a href="#实用命令汇总" class="headerlink" title="实用命令汇总"></a>实用命令汇总</h1>
      
        <h3 id="工作区-gt-暂存区"   >
          <a href="#工作区-gt-暂存区" class="heading-link"><i class="fas fa-link"></i></a><a href="#工作区-gt-暂存区" class="headerlink" title="工作区 -&gt; 暂存区"></a>工作区 -&gt; 暂存区</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add &lt;file/dir&gt;</span></span><br></pre></td></tr></table></div></figure>



        <h3 id="暂存区-gt-本地仓库"   >
          <a href="#暂存区-gt-本地仓库" class="heading-link"><i class="fas fa-link"></i></a><a href="#暂存区-gt-本地仓库" class="headerlink" title="暂存区 -&gt; 本地仓库"></a>暂存区 -&gt; 本地仓库</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">&quot;some info&quot;</span></span></span><br></pre></td></tr></table></div></figure>
<span id="more"></span>


        <h3 id="本地仓库-gt-远程仓库"   >
          <a href="#本地仓库-gt-远程仓库" class="heading-link"><i class="fas fa-link"></i></a><a href="#本地仓库-gt-远程仓库" class="headerlink" title="本地仓库 -&gt; 远程仓库"></a>本地仓库 -&gt; 远程仓库</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git push origin master  <span class="comment"># 本地master分支推送到远程origin仓库</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="工作区-lt-暂存区"   >
          <a href="#工作区-lt-暂存区" class="heading-link"><i class="fas fa-link"></i></a><a href="#工作区-lt-暂存区" class="headerlink" title="工作区 &lt;- 暂存区"></a>工作区 &lt;- 暂存区</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout -- &lt;file&gt;  <span class="comment"># 暂存区文件内容覆盖工作区文件内容</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="暂存区-lt-本地仓库"   >
          <a href="#暂存区-lt-本地仓库" class="heading-link"><i class="fas fa-link"></i></a><a href="#暂存区-lt-本地仓库" class="headerlink" title="暂存区 &lt;- 本地仓库"></a>暂存区 &lt;- 本地仓库</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset HEAD &lt;file&gt;   <span class="comment"># 本地仓库文件内容覆盖暂存区文件内容</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="本地仓库-lt-远程仓库"   >
          <a href="#本地仓库-lt-远程仓库" class="heading-link"><i class="fas fa-link"></i></a><a href="#本地仓库-lt-远程仓库" class="headerlink" title="本地仓库 &lt;- 远程仓库"></a>本地仓库 &lt;- 远程仓库</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> &lt;git_url&gt;        <span class="comment"># 克隆远程仓库</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch upstream master  <span class="comment"># 拉取远程代码到本地但不应用在当前分支</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull upstream master   <span class="comment"># 拉取远程代码到本地但应用在当前分支</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull --rebase upstream master  <span class="comment"># 如果平时使用rebase合并代码则加上</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="工作区-lt-本地仓库"   >
          <a href="#工作区-lt-本地仓库" class="heading-link"><i class="fas fa-link"></i></a><a href="#工作区-lt-本地仓库" class="headerlink" title="工作区 &lt;- 本地仓库"></a>工作区 &lt;- 本地仓库</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset &lt;commit&gt;          <span class="comment"># 本地仓库覆盖到工作区(保存回退文件内容修改)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --mixed &lt;commit&gt;  <span class="comment"># 本地仓库覆盖到工作区(保存回退文件内容修改)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --soft &lt;commit&gt;   <span class="comment"># 本地仓库覆盖到工作区(保留修改并加到暂存区)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard &lt;commit&gt;   <span class="comment"># 本地仓库覆盖到工作区(不保留修改直接删除掉)</span></span></span><br></pre></td></tr></table></div></figure>



        <h1 id="配置实用参数选项"   >
          <a href="#配置实用参数选项" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置实用参数选项" class="headerlink" title="配置实用参数选项"></a>配置实用参数选项</h1>
      
        <h2 id="全局配置"   >
          <a href="#全局配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2>
      
        <h3 id="用户信息"   >
          <a href="#用户信息" class="heading-link"><i class="fas fa-link"></i></a><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">&quot;your_name&quot;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">&quot;your_email&quot;</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="文本编辑器"   >
          <a href="#文本编辑器" class="heading-link"><i class="fas fa-link"></i></a><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global core.editor <span class="string">&quot;nvim&quot;</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="分页器"   >
          <a href="#分页器" class="heading-link"><i class="fas fa-link"></i></a><a href="#分页器" class="headerlink" title="分页器"></a>分页器</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global core.pager <span class="string">&quot;more&quot;</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="别名"   >
          <a href="#别名" class="heading-link"><i class="fas fa-link"></i></a><a href="#别名" class="headerlink" title="别名"></a>别名</h3>
      <figure class="highlight plaintext"><figcaption><span>git config --global alias.gs "git status"shell</span></figcaption><div class="table-container"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></div></figure>



        <h3 id="纠错"   >
          <a href="#纠错" class="heading-link"><i class="fas fa-link"></i></a><a href="#纠错" class="headerlink" title="纠错"></a>纠错</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global help.autocorrect 1</span></span><br></pre></td></tr></table></div></figure>


        <h2 id="个人配置"   >
          <a href="#个人配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h2>
      
        <h3 id="不加–global参数的话，则为个人配置"   >
          <a href="#不加–global参数的话，则为个人配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#不加–global参数的话，则为个人配置" class="headerlink" title="不加–global参数的话，则为个人配置"></a>不加–global参数的话，则为个人配置</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --list</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config user.name</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config user.name <span class="string">&quot;your_name&quot;</span></span></span><br></pre></td></tr></table></div></figure>



        <h3 id="如果在项目中设置，则保存在-git-config文件里面"   >
          <a href="#如果在项目中设置，则保存在-git-config文件里面" class="heading-link"><i class="fas fa-link"></i></a><a href="#如果在项目中设置，则保存在-git-config文件里面" class="headerlink" title="如果在项目中设置，则保存在.git/config文件里面"></a>如果在项目中设置，则保存在.git/config文件里面</h3>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat .git/config</span></span><br><span class="line">[user]</span><br><span class="line">    name = &quot;your_name&quot;</span><br><span class="line">......</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>other</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>运行Maven项目时出错“Error : java 不支持发行版本5”</title>
    <url>/2021/07/20/other/tools_idea/</url>
    <content><![CDATA[
        <h3 id="修改-idea-配置"   >
          <a href="#修改-idea-配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改-idea-配置" class="headerlink" title="修改 idea 配置"></a>修改 idea 配置</h3>
      <ol>
<li><p>点击 File -&gt; Project Structure</p>

        <img   class="lazyload lazyload-gif"
          src="/images/loading.svg" data-src="/uploads/img/idea/idea_1.png" >
      
<span id="more"></span></li>
<li><p>查看 Project Setting 下 Project 和Modules栏目中的Java版本是否一致，如果不一致，改成本地使用的Java版本。</p>

        <img   class="lazyload lazyload-gif"
          src="/images/loading.svg" data-src="/uploads/img/idea/idea_2.png" >
      </li>
<li><p>点击“Settings”–&gt;“Bulid, Execution,Deployment”–&gt;“Java Compiler”，Target bytecode version设为本地Java版本。（可以在Default Settings中把Project bytecode version 一劳永逸地配置成本地Java版本）</p>

        <img   class="lazyload lazyload-gif"
          src="/images/loading.svg" data-src="/uploads/img/idea/idea_3.png" >
      </li>
</ol>

        <h3 id="导入sql表"   >
          <a href="#导入sql表" class="heading-link"><i class="fas fa-link"></i></a><a href="#导入sql表" class="headerlink" title="导入sql表"></a>导入sql表</h3>
      <ul>
<li>在数据库创建一个表(在Schemas右键new一个Schema)</li>
<li>打开sql脚本</li>
<li>右键运行</li>
<li>选择要导入的表</li>
</ul>
]]></content>
      <categories>
        <category>other</category>
        <category>idea</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo</title>
    <url>/2021/07/22/other/hexo/</url>
    <content><![CDATA[
        <h2 id="添加-gitalk"   >
          <a href="#添加-gitalk" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加-gitalk" class="headerlink" title="添加 gitalk"></a><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/weixin_43941364/article/details/104160976?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162692035316780271571612%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162692035316780271571612&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-23-104160976.first_rank_v2_pc_rank_v29&utm_term=hexo++%E8%AF%84%E8%AE%BA&spm=1018.2226.3001.4187" >添加 gitalk</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></h2>
      
        <h3 id="创建-GitHub-Application"   >
          <a href="#创建-GitHub-Application" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建-GitHub-Application" class="headerlink" title="创建 GitHub Application"></a>创建 GitHub Application</h3>
      
        <h3 id="引入-gitalk-的代码"   >
          <a href="#引入-gitalk-的代码" class="heading-link"><i class="fas fa-link"></i></a><a href="#引入-gitalk-的代码" class="headerlink" title="引入 gitalk 的代码"></a>引入 gitalk 的代码</h3>
      <p>在 themes/[theme_name]/layout/_script/_comments/ 目录下，创建gitalk.swig文件。</p>
<figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- gitalk.swig --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/gitalk/1.4.0/gitalk.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/gitalk/1.4.0/gitalk.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">  var gitalk = new Gitalk(&#123;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    clientID: &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.ClientID</span> &#125;&#125;</span><span class="xml">&#x27;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    clientSecret: &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.ClientSecret</span> &#125;&#125;</span><span class="xml">&#x27;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    repo: &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.repo</span> &#125;&#125;</span><span class="xml">&#x27;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    owner: &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.owner</span> &#125;&#125;</span><span class="xml">&#x27;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    admin: [&#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.adminUser</span> &#125;&#125;</span><span class="xml">&#x27;],</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    id: md5(location.pathname),   // ISSUE：location.href 限制50个字符 (应该是Issue 内容存数据库的标识， 具体在页面上无感)</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    labels: &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.labels</span> &#125;&#125;</span><span class="xml">&#x27;.split(&#x27;,&#x27;).filter(l =&gt; l),  // 需要的 labels需要一个数组，否则会报错</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    perPage: </span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.perPage</span> &#125;&#125;</span><span class="xml">,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    pagerDirection: &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.pagerDirection</span> &#125;&#125;</span><span class="xml">&#x27;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    createIssueManually: </span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.createIssueManually</span> &#125;&#125;</span><span class="xml">,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    distractionFreeMode: </span><span class="template-variable">&#123;&#123; <span class="name">theme.gitalk.distractionFreeMode</span> &#125;&#125;</span><span class="xml"></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">  &#125;)</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">  gitalk.render(&#x27;gitalk-container&#x27;)</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure>
<span id="more"></span>


        <h3 id="在-comments-swig-引用gitalk-swig"   >
          <a href="#在-comments-swig-引用gitalk-swig" class="heading-link"><i class="fas fa-link"></i></a><a href="#在-comments-swig-引用gitalk-swig" class="headerlink" title="在 comments.swig 引用gitalk.swig"></a>在 comments.swig 引用gitalk.swig</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- themes/[theme_name]/layout/_script/comments.swig --&gt;</span><br><span class="line">&#123;% include <span class="string">&#x27;_comments/gitalk.swig&#x27;</span> %&#125;</span><br></pre></td></tr></table></div></figure>
<p>如果没有找到这个 comments.swig ， 可以直接放到themes/polarbear/layout/_layout.swig 的 body 结束标签前</p>

        <h3 id="添加配置"   >
          <a href="#添加配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3>
      <figure class="highlight js"><div class="table-container"><table><tr><td class="code"><pre><span class="line"># theme/[theme_name]/_config.yaml 添加配置</span><br><span class="line"># ===========================================</span><br><span class="line"># Comments Settings</span><br><span class="line"># ===========================================</span><br><span class="line">gitalk:</span><br><span class="line">  enable: <span class="literal">true</span> # 是否启动</span><br><span class="line">  <span class="attr">ClientID</span>: Your ClientID # 之前的Client ID</span><br><span class="line">  <span class="attr">ClientSecret</span>: Your ClientSecret # 之前的Client Secret</span><br><span class="line">  <span class="attr">repo</span>: gitalk # 留言板内容需要存放的仓库名称</span><br><span class="line">  <span class="attr">owner</span>: wsuo # 你 github 的帐号 eg: www.github.com/wsuo ,帐号就是wsuo</span><br><span class="line">  <span class="attr">adminUser</span>: wsuo # 管理员用户</span><br><span class="line">  <span class="attr">labels</span>: # issue 的标签</span><br><span class="line">    - gitalk</span><br><span class="line">  <span class="attr">perPage</span>: <span class="number">15</span> # 每页展示条数</span><br><span class="line">  <span class="attr">pagerDirection</span>: last # 排序方式是从旧到新（first）还是从新到旧（last）</span><br><span class="line">  <span class="attr">createIssueManually</span>: <span class="literal">false</span> #如果当前页面没有相应的 isssue ，且登录的用户属于 admin，则会自动创建 issue。如果设置为 <span class="literal">true</span>，则显示一个初始化页面，创建 issue 需要点击 init 按钮。</span><br><span class="line">  <span class="attr">distractionFreeMode</span>: <span class="literal">false</span> #是否启用快捷键(cmd|ctrl + enter) 提交评论.</span><br></pre></td></tr></table></div></figure>




        <h2 id="stun主题配置"   >
          <a href="#stun主题配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#stun主题配置" class="headerlink" title="stun主题配置"></a><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/qq_26624329/article/details/111411095" >stun主题配置</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></h2>
      
        <h3 id="添加tags、categories，增加页面导航"   >
          <a href="#添加tags、categories，增加页面导航" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加tags、categories，增加页面导航" class="headerlink" title="添加tags、categories，增加页面导航"></a>添加tags、categories，增加页面导航</h3>
      
        <h4 id="指令"   >
          <a href="#指令" class="heading-link"><i class="fas fa-link"></i></a><a href="#指令" class="headerlink" title="指令"></a>指令</h4>
      <figure class="highlight shell"><div class="table-container"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></div></figure>


        <h4 id="修改主题配置文件"   >
          <a href="#修改主题配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h4>
      <p>/themes/stun/_config.yml</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  categories: /categories/ || fas fa-layer-group</span><br><span class="line">  tags: /tags/ || fas fa-tags</span><br></pre></td></tr></table></div></figure>


        <h3 id="文章规范"   >
          <a href="#文章规范" class="heading-link"><i class="fas fa-link"></i></a><a href="#文章规范" class="headerlink" title="文章规范"></a>文章规范</h3>
      
        <h4 id="文章元数据"   >
          <a href="#文章元数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#文章元数据" class="headerlink" title="文章元数据"></a>文章元数据</h4>
      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">title: </span><br><span class="line">date: </span><br><span class="line">categories</span><br><span class="line">- 父类别</span><br><span class="line">- 子类别</span><br><span class="line">tags: </span><br><span class="line">- 标签1</span><br><span class="line">- 标签2</span><br></pre></td></tr></table></div></figure>


        <h4 id="主页不显示全部"   >
          <a href="#主页不显示全部" class="heading-link"><i class="fas fa-link"></i></a><a href="#主页不显示全部" class="headerlink" title="主页不显示全部"></a>主页不显示全部</h4>
      <figure class="highlight md"><div class="table-container"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></div></figure>
]]></content>
      <categories>
        <category>other</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown快捷键和语法</title>
    <url>/2021/07/20/other/markdown/</url>
    <content><![CDATA[
        <h3 id="key-bindings"   >
          <a href="#key-bindings" class="heading-link"><i class="fas fa-link"></i></a><a href="#key-bindings" class="headerlink" title="key bindings"></a>key bindings</h3>
      <div class="table-container"><table>
<thead>
<tr>
<th>ShortKeys</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl+Alt+V</td>
<td>在选定的文本上创建或粘贴剪贴板的内容作为内联链接。</td>
</tr>
<tr>
<td>Ctrl+Alt+R</td>
<td>创建或粘贴剪贴板的内容作为引用链接。</td>
</tr>
<tr>
<td>Shift+Win+K</td>
<td>创建或将剪贴板的内容作为内联图像粘贴到选定的文本上。</td>
</tr>
<tr>
<td>Alt+B Alt+I</td>
<td>这些必须是粗体和斜体。有选择和没有选择都适用。如果没有选择，他们只会转换光标下的单词。</td>
</tr>
<tr>
<td>Ctrl+1…6</td>
<td>这些将为标题添加相应数量的哈希标记。与上述标题工具一起处理空行和选定文本。如果您选择一个完整的现有标题，当前的哈希标记将被删除并替换为您请求的标题级别。这个命令尊重mde.match\头\哈希首选项设置。</td>
</tr>
<tr>
<td>Alt+Shift+6</td>
<td>插入脚注。</td>
</tr>
<tr>
<td>Shift+Tab</td>
<td>折叠/展开当前节。</td>
</tr>
<tr>
<td>Ctrl+Shift+Tab</td>
<td>将所有章节折叠到某一级别的标题下。</td>
</tr>
<tr>
<td>Ctrl+Alt+Shift+PageUp Ctrl+Alt+Shift+PageDown</td>
<td>转到相同或更高级别的上一个/下一个标题</td>
</tr>
<tr>
<td>Ctrl+Shift+PageUp Ctrl+Shift+PageDown</td>
<td>转到上一个/下一个标题</td>
</tr>
<tr>
<td>Ctrl+Shift+H</td>
<td>打开主页</td>
</tr>
<tr>
<td>Ctrl+Shift+D</td>
<td>在光标下打开wiki页面</td>
</tr>
<tr>
<td>Ctrl+Shift+J</td>
<td>打开今天的日记页</td>
</tr>
<tr>
<td>Ctrl+Shift+B</td>
<td>列出反向链接</td>
</tr>
</tbody></table></div>
<span id="more"></span>


        <h3 id="Topic"   >
          <a href="#Topic" class="heading-link"><i class="fas fa-link"></i></a><a href="#Topic" class="headerlink" title="Topic"></a>Topic</h3>
      <ul>
<li>分割线：<br><code>---</code></li>
<li>代码块：<figure class="highlight java"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br></pre></td></tr></table></div></figure></li>
<li>插入链接：<br><code>[链接文字](链接网址 &quot;标题&quot;)</code><br>如：<span class="exturl"><a class="exturl__link"   href="http://www.baidu.com/"  title="ABC">百度</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li>
<li>插入图片：<br><code>[文字](路径 &quot;标签)</code><br><span class="exturl"><a class="exturl__link"   href="C:\Users\Administer\Pictures\11_Moment.jpg"  title="标签">图片</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><ul>
<li>直接显示图片<br>
        <img   class="lazyload lazyload-gif"
          src="/images/loading.svg" data-src="C:\Users\Administer\Pictures\11_Moment.jpg"  alt="图片">
      <br>&lt;img src=”C:\Users\Administer\Pictures\11_Moment.jpg” width=”256”, height=”150”&gt;</li>
</ul>
</li>
<li>换行：<br><code>&lt;br&gt;</code><br>
这是下一行</li>
<li>首行缩进：<br><code>&amp;emsp;&amp;emsp;</code><br><br>&emsp;&emsp; 两个全角的空格（用的比较多）<br><br><code>&amp;emsp;</code>&emsp;  表示一个全角的空格&ensp; or &#8194; 表示一个半角的空格<br></li>
</ul>
]]></content>
      <categories>
        <category>other</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>other</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Bean 作用域</title>
    <url>/2021/06/07/spring/3%20spring%20bean%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
    <content><![CDATA[
        <h3 id="作用域的种类"   >
          <a href="#作用域的种类" class="heading-link"><i class="fas fa-link"></i></a><a href="#作用域的种类" class="headerlink" title="作用域的种类"></a>作用域的种类</h3>
      <pre><code>Spring 容器在初始化一个 Bean 实例时，同时会指定该实例的作用域。Spring 5 支持以下 6 种作用域。
</code></pre>
<ul>
<li><p>1）singleton</p>
<p>  默认值，单例模式，表示在 Spring 容器中只有一个 Bean 实例，Bean 以单例的方式存在。</p>
</li>
<li><p>2）prototype</p>
<p>  原型模式，表示每次通过 Spring 容器获取 Bean 时，容器都会创建一个 Bean 实例。</p>
</li>
<li><p>3）request</p>
</li>
</ul>
<span id="more"></span>

<pre><code>每次 HTTP 请求，容器都会创建一个 Bean 实例。该作用域只在当前 HTTP Request 内有效。
</code></pre>
<ul>
<li><p>4）session</p>
<p>  同一个 HTTP Session 共享一个 Bean 实例，不同的 Session 使用不同的 Bean 实例。该作用域仅在当前 HTTP Session 内有效。</p>
</li>
<li><p>5）application</p>
<p>  同一个 Web 应用共享一个 Bean 实例，该作用域在当前 ServletContext 内有效。</p>
<p>  类似于 singleton，不同的是，singleton 表示每个 IoC 容器中仅有一个 Bean 实例，而同一个 Web 应用中可能会有多个 IoC 容器，但一个 Web 应用只会有一个 ServletContext，也可以说 application 才是 Web 应用中货真价实的单例模式。</p>
</li>
<li><p>6）websocket</p>
<p>  websocket 的作用域是 WebSocket ，即在整个 WebSocket 中有效。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>概述</title>
    <url>/2021/06/05/spring/1%20%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[
        <h3 id="Spring-内核"   >
          <a href="#Spring-内核" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spring-内核" class="headerlink" title="Spring 内核"></a>Spring 内核</h3>
      <ul>
<li><p>控制反转 IoC</p>
<p>  系统的耦合性降低，不用再去创建对象。</p>
</li>
<li><p>面向切面编程 AOP</p>
<p>  AOP 模块：提供了面向切面编程实现，提供比如日志记录、权限控制、性能统计等通用功能和业务逻辑分离的技术，并且能动态的把这些功能添加到需要的代码中，这样各司其职，降低业务逻辑和通用功能的耦合。</p>
</li>
</ul>
<span id="more"></span>


        <h3 id="spring体系结构"   >
          <a href="#spring体系结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#spring体系结构" class="headerlink" title="spring体系结构"></a>spring体系结构</h3>
      
        <h3 id="创建spring项目（idea）"   >
          <a href="#创建spring项目（idea）" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建spring项目（idea）" class="headerlink" title="创建spring项目（idea）"></a>创建spring项目（idea）</h3>
      
        <h3 id="IoC容器"   >
          <a href="#IoC容器" class="heading-link"><i class="fas fa-link"></i></a><a href="#IoC容器" class="headerlink" title="IoC容器"></a>IoC容器</h3>
      <pre><code>BeanFactory 和 ApplicationContext 容器。
</code></pre>
<ul>
<li><p>BeanFactory </p>
<p>  BeanFactory 提供了容器最基本的功能。</p>
</li>
<li><p>ApplicationContext </p>
<p>  ApplicationContext继承了 BeanFactory 接口。ApplicationContext 在 BeanFactory 的基础上增加了很多企业级功能，例如 AOP、国际化、事件支持等。ApplicationContext 接口有两个常用的实现类：             ClassPathXmlApplicationContext和FileSystemXmlApplicationContext</p>
<figure class="highlight plaintext"><div class="table-container"><table><tr><td class="code"><pre><span class="line">二者的主要区别在于，如果 Bean 的某一个属性没有注入，使用 BeanFacotry 加载后，第一次调用 getBean() 方法时会抛出异常，而 ApplicationContext 则会在初始化时自检，这样有利于检查所依赖的属性是否注入。</span><br></pre></td></tr></table></div></figure></li>
</ul>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Bean 定义</title>
    <url>/2021/06/06/spring/2%20spring%20bean%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[
        <h3 id="spring-定义"   >
          <a href="#spring-定义" class="heading-link"><i class="fas fa-link"></i></a><a href="#spring-定义" class="headerlink" title="spring 定义"></a>spring 定义</h3>
      <pre><code>通常情况下，Spring 的配置文件使用 XML 格式。
Spring 配置文件支持两种格式，即 XML 文件格式和 Properties 文件格式。
Properties 配置文件主要以 key-value 键值对的形式存在，只能赋值，不能进行其他操作，适用于简单的属性配置。
XML 配置文件是树形结构，相对于 Properties 文件来说更加灵活。XML 配置文件结构清晰，但是内容比较繁琐，适用于大型复杂的项目。
</code></pre>
<ul>
<li>id      Bean 的唯一标识符，Spring 容器对 Bean 的配置和管理都通过该属性完成。id 的值必须以字母开始，可以使用字母、数字、下划线等符号。</li>
<li>name    </li>
</ul>
<span id="more"></span>
<pre><code>name 属性中可以为 Bean 指定多个名称，每个名称之间用逗号或分号隔开。Spring 容器可以通过 name 属性配置和管理容器中的 Bean。
</code></pre>
<ul>
<li><p>class    </p>
<p>  该属性指定了 Bean 的具体实现类，它必须是一个完整的类名，即类的全限定名。</p>
</li>
<li><p>scope     </p>
<p>  用于设定 Bean 实例的作用域，属性值可以为 singleton（单例）、prototype（原型）、request、session 和 global Session。其默认值是 singleton</p>
</li>
<li><p>constructor-arg    </p>
<p>  <code>&lt;bean&gt;</code>元素的子元素，可以使用此元素传入构造参数进行实例化。该元素的 index 属性指定构造参数的序号（从 0 开始），type 属性指定构造参数的类型</p>
</li>
<li><p>property    </p>
<p>  <code>&lt;bean&gt;</code>元素的子元素，用于调用 Bean 实例中的 setter 方法来属性赋值，从而完成依赖注入。该元素的 name 属性用于指定 Bean 实例中相应的属性名</p>
</li>
<li><p>ref    </p>
<p>  <code>&lt;property&gt;</code> 和 <code>&lt;constructor-arg&gt;</code> 等元素的子元索，该元素中的 bean 属性用于指定对某个 Bean 实例的引用</p>
</li>
<li><p>value    </p>
<p>  <code>&lt;property&gt;</code> 和 <code>&lt;constractor-arg&gt;</code> 等元素的子元素，用于直接指定一个常量值</p>
</li>
<li><p>list    </p>
<p>  用于封装 List 或数组类型的依赖注入</p>
</li>
<li><p>set     </p>
<p>  用于封装 Set 类型的依赖注入</p>
</li>
<li><p>map    </p>
<p>  用于封装 Map 类型的依赖注入</p>
</li>
<li><p>entry    </p>
<p>  <code>&lt;map&gt;</code> 元素的子元素，用于设置一个键值对。其 key 属性指定字符串类型的键值，ref 或 value 子元素指定其值</p>
</li>
<li><p>init-method    </p>
<p>  容器加载 Bean 时调用该方法，类似于 Servlet 中的 init() 方法</p>
</li>
<li><p>destroy-method    </p>
<p>  容器删除 Bean 时调用该方法，类似于 Servlet 中的 destroy() 方法。该方法只在 scope=singleton 时有效</p>
</li>
<li><p>lazy-init    </p>
<p>  懒加载，值为 true，容器在首次请求时才会创建 Bean 实例；值为 false，容器在启动时创建 Bean 实例。该方法只在 scope=singleton 时有效</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Bean 生命周期</title>
    <url>/2021/06/07/spring/4%20spring%20bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[
        <h3 id="Spring-容器中-Bean-的生命周期流程"   >
          <a href="#Spring-容器中-Bean-的生命周期流程" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spring-容器中-Bean-的生命周期流程" class="headerlink" title="Spring 容器中 Bean 的生命周期流程"></a>Spring 容器中 Bean 的生命周期流程</h3>
      <img src='http://c.biancheng.net/uploads/allimg/210701/10551T325-0.png'>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS FlexBox</title>
    <url>/2020/09/12/Web/flex-layout/</url>
    <content><![CDATA[
        <h3 id="容器属性"   >
          <a href="#容器属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#容器属性" class="headerlink" title="容器属性"></a>容器属性</h3>
      <ul>
<li><p>justify-content</p>
<p>  定义了项目在主轴上的对齐方式。</p>
  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>: flex-start | flex-end | center |space-between | space-around</span><br></pre></td></tr></table></div></figure></li>
<li><p>align-items</p>
<p>  定义项目在交叉轴上如何对齐。</p>
  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="attribute">align-items</span>:flex-start | flex-end | center | baseline | stretch</span><br></pre></td></tr></table></div></figure></li>
<li><p>align-content</p>
<p>  定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>
  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="attribute">align-content</span>: flex-start | flex-end | center | space-between |space-around | stretch</span><br></pre></td></tr></table></div></figure></li>
<li><p>flex-direction</p>
<p>  决定主轴的方向（即项目的排列方向）。</p>
  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br></pre></td></tr></table></div></figure></li>
<li><p>flex-wrap</p>
<p>  定义如果一条轴线排不下，如何换行。</p>
  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br></pre></td></tr></table></div></figure></li>
<li><p>flex-flow</p>
<p>  flex-direction属性和flex-wrap属性的简写形式。</p>

        <h3 id="项目属性"   >
          <a href="#项目属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h3>
      </li>
<li><p>order</p>
<p>  定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p>
</li>
<li><p>align-self</p>
<p>  允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。</p>
</li>
<li><p>flex-grow</p>
<p>  定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p>
</li>
<li><p>flex-shrink</p>
<p>  定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>
</li>
<li><p>flex-basis</p>
<p>   指定了 flex 元素在主轴方向上的初始大小。定义了在分配多余空间之前，项目占据的主轴空间（main size）。</p>
</li>
<li><p>flex: </p>
<p>  flex-grow, flex-shrink 和 flex-basis的简写</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS基础知识</title>
    <url>/2020/09/12/Web/c1_certify/</url>
    <content><![CDATA[<ul>
<li><p>html: 文档元数据、内容区域标签、文本内容标签、内联文本语义标签、图片与多媒体标签、表格内容标签、表单标签</p>
</li>
<li><p>css: 基本语法、块级/内联元素、图片样式、背景图样式、盒子模型、边框与背景、字体样式、CSS嵌入方式、CSS优先级、定位、浮动、基础选择器、分组选择器、组合选择器、伪类选择器、溢出属性、颜色值标注、em/rem/px单位</p>
</li>
</ul>

        <h2 id="CSS"   >
          <a href="#CSS" class="heading-link"><i class="fas fa-link"></i></a><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2>
      
        <h3 id="块级-内联元素"   >
          <a href="#块级-内联元素" class="heading-link"><i class="fas fa-link"></i></a><a href="#块级-内联元素" class="headerlink" title="块级/内联元素"></a>块级/内联元素</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/xuanfuhuo4769/article/details/81326457" >https://blog.csdn.net/xuanfuhuo4769/article/details/81326457</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>块级元素|内联元素<br>—-|—-<br>独占一行,默认情况下，其宽度自动填满其父元素宽度|相邻的行内元素会排列在同一行里，直到一行排不下，才会换行，其宽度随元素的内容而变化<br>可以设置width，height属性|行内元素设置width，height属性无效<br>可以设置margin和padding属性|行内元素起边距作用的只有margin-left、margin-right、padding-left、padding-right，其它属性不会起边距效果。<br>对应于display:block|对应于display:inline；</p>

        <h3 id="图片样式"   >
          <a href="#图片样式" class="heading-link"><i class="fas fa-link"></i></a><a href="#图片样式" class="headerlink" title="图片样式"></a>图片样式</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://cloud.tencent.com/developer/article/1735108" >https://cloud.tencent.com/developer/article/1735108</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<ul>
<li><p>一、图片大小</p>
<ul>
<li>width</li>
<li>height</li>
</ul>
</li>
<li><p>二、图片边框</p>
<ul>
<li>border</li>
</ul>
</li>
<li><p>三、图片对齐</p>
<ul>
<li>在父类使用：text-align、vertical-align</li>
</ul>
</li>
<li><p>四、文字环绕（float）</p>
<ul>
<li>float: left | right</li>
</ul>
</li>
</ul>

        <h3 id="背景图样式"   >
          <a href="#背景图样式" class="heading-link"><i class="fas fa-link"></i></a><a href="#背景图样式" class="headerlink" title="背景图样式"></a>背景图样式</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/qq_48192192/article/details/119803230" >https://blog.csdn.net/qq_48192192/article/details/119803230</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<ul>
<li><p>background-color</p>
</li>
<li><p>background-image: none | url(“”) | linear-gradient(color1, color2)</p>
</li>
<li><p>background-repeat: repeat | no-repeat | repeat-x | repeat-y</p>
</li>
<li><p>background-position:  </p>
</li>
<li><p>background-size </p>
</li>
<li><p>background-attachment 背景图像固定</p>
</li>
<li><p>background-clip ⽤于设定背景裁切的⽅式</p>
</li>
<li><p>background-origin ⽤于设定背景铺设的起点</p>
</li>
<li><p>background 背景属性复合写法<br><br>&nbsp;单独的属性需要写在复合属性的下方，否则复合属性会覆盖上方的单独属性。</p>
<ul>
<li>设置背景色半透明<br><br>background：rgba (r, g ,b , 透明度) 
        <h3 id="盒子模型"   >
          <a href="#盒子模型" class="heading-link"><i class="fas fa-link"></i></a><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3>
      </li>
</ul>
</li>
<li><p>Margin(外边距) - 清除边框外的区域，外边距是透明的。</p>
</li>
<li><p>Border(边框) - 围绕在内边距和内容外的边框。</p>
</li>
<li><p>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</p>
</li>
<li><p>Content(内容) - width和height。 盒子的内容，显示文本和图像。</p>
</li>
</ul>

        <h3 id="边框与背景"   >
          <a href="#边框与背景" class="heading-link"><i class="fas fa-link"></i></a><a href="#边框与背景" class="headerlink" title="边框与背景"></a>边框与背景</h3>
      <ul>
<li>边框<ul>
<li>border-style</li>
<li>border-width</li>
<li>border-color    </li>
<li>border-radius</li>
<li>box-shadow</li>
<li>border-image</li>
</ul>
</li>
</ul>

        <h3 id="字体样式"   >
          <a href="#字体样式" class="heading-link"><i class="fas fa-link"></i></a><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3>
      <ul>
<li>font-family 字体类型</li>
<li>font-size 字体大小</li>
<li>color 字体颜色</li>
<li>font-weight 字体粗细</li>
<li>font-style 字体风格</li>
<li>text-decoration 下划线</li>
<li>font-variant 字体大小写</li>
</ul>

        <h3 id="CSS优先级"   >
          <a href="#CSS优先级" class="heading-link"><i class="fas fa-link"></i></a><a href="#CSS优先级" class="headerlink" title="CSS优先级"></a>CSS优先级</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://www.cnblogs.com/zxjwlh/p/6213239.html" >https://www.cnblogs.com/zxjwlh/p/6213239.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<ul>
<li>在属性后面使用 !important 会覆盖页面内任何位置定义的元素样式。</li>
<li>作为style属性写在元素内的样式</li>
<li>id选择器</li>
<li>类选择器</li>
<li>标签选择器</li>
<li>通配符选择器</li>
<li>浏览器自定义或继承</li>
</ul>
<p>（排序：!important &gt; 行内样式&gt;ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性同一级别）</p>

        <h3 id="定位"   >
          <a href="#定位" class="heading-link"><i class="fas fa-link"></i></a><a href="#定位" class="headerlink" title="定位"></a>定位</h3>
      <ul>
<li>position<ul>
<li>static</li>
<li>relative</li>
<li>fixed</li>
<li>absolute</li>
<li>sticky</li>
</ul>
</li>
</ul>

        <h3 id="浮动"   >
          <a href="#浮动" class="heading-link"><i class="fas fa-link"></i></a><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3>
      <ul>
<li>float <ul>
<li>right</li>
<li>left </li>
<li>none</li>
<li>inherit</li>
</ul>
</li>
</ul>

        <h3 id="基础选择器"   >
          <a href="#基础选择器" class="heading-link"><i class="fas fa-link"></i></a><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3>
      <div class="table-container"><table>
<thead>
<tr>
<th>基础选择器</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>标签选择器</td>
<td>可以选出所有相同的标签，比如：p</td>
</tr>
<tr>
<td>类选择器</td>
<td>可以选出 1 个或者 多个 标签</td>
</tr>
<tr>
<td>id 选择器</td>
<td>一次只能选择 1 个标签</td>
</tr>
<tr>
<td>通配符选择器</td>
<td>选择所有的标签</td>
</tr>
</tbody></table></div>

        <h3 id="分组选择器"   >
          <a href="#分组选择器" class="heading-link"><i class="fas fa-link"></i></a><a href="#分组选择器" class="headerlink" title="分组选择器"></a>分组选择器</h3>
      <pre><code><figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
<figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.class1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-class">.class2</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*共同样式*/</span></span><br><span class="line"><span class="selector-class">.class1</span>, class2&#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>
</code></pre>

        <h3 id="组合选择器"   >
          <a href="#组合选择器" class="heading-link"><i class="fas fa-link"></i></a><a href="#组合选择器" class="headerlink" title="组合选择器"></a>组合选择器</h3>
      <ul>
<li>A,B 多个元素选择  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>, <span class="selector-tag">p</span> &#123; <span class="attribute">color</span>:red; &#125;</span><br></pre></td></tr></table></div></figure></li>
<li>A B 后代元素选择器，匹配所有属于A元素后代的B元素，A和B之间用空格分隔  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#fuji</span> <span class="selector-class">.ziji</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#000000</span> solid;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>A &gt; B 子元素选择器，匹配所有A元素的子元素B  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#zys</span>&gt;<span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#000000</span> solid;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
<li>A + B 毗邻元素选择器，匹配所有紧随A元素之后的同级元素B  <figure class="highlight css"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#pl</span> <span class="selector-tag">p</span>+<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#000000</span> solid;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li>
</ul>

        <h3 id="伪类"   >
          <a href="#伪类" class="heading-link"><i class="fas fa-link"></i></a><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h3>
      <p>静态伪类和动态伪类，伪类选择器分为两种。</p>
<ul>
<li><p>（1）静态伪类：只能用于超链接的样式。如下：</p>
<ul>
<li>:link 超链接点击之前</li>
<li>:visited 链接被访问过之后</li>
</ul>
<p>  PS：以上两种样式，只能用于超链接。</p>
</li>
<li><p>（2）动态伪类：针对所有标签都适用的样式。如下：</p>
<ul>
<li>:hover “悬停”：鼠标放到标签上的时候</li>
<li>:active “激活”： 鼠标点击标签，但是不松手时。</li>
<li>:focus 是某个标签获得焦点时的样式（比如某个输入框获得焦点）</li>
</ul>
</li>
</ul>

        <h3 id="溢出属性"   >
          <a href="#溢出属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#溢出属性" class="headerlink" title="溢出属性"></a>溢出属性</h3>
      <ul>
<li>overflow <ul>
<li>visible - 默认。溢出没有被剪裁。内容在元素框外渲染</li>
<li>hidden - 溢出被剪裁，其余内容将不可见</li>
<li>scroll - 溢出被剪裁，同时添加滚动条以查看其余内容</li>
<li>auto - 与 scroll 类似，但仅在必要时添加滚动条</li>
</ul>
</li>
</ul>

        <h3 id="颜色值标注"   >
          <a href="#颜色值标注" class="heading-link"><i class="fas fa-link"></i></a><a href="#颜色值标注" class="headerlink" title="颜色值标注"></a>颜色值标注</h3>
      <p><span class="exturl"><a class="exturl__link"   href="https://www.w3school.com.cn/cssref/css_colors_legal.asp" >https://www.w3school.com.cn/cssref/css_colors_legal.asp</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
<ul>
<li>十六进制颜色</li>
<li>带透明度的十六进制颜色</li>
<li>RGB 颜色</li>
<li>RGBA 颜色</li>
<li>HSL 颜色</li>
<li>HSLA 颜色</li>
<li>预定义/跨浏览器的颜色名称</li>
<li>currentcolor 关键字</li>
</ul>

        <h3 id="em-rem-px单位"   >
          <a href="#em-rem-px单位" class="heading-link"><i class="fas fa-link"></i></a><a href="#em-rem-px单位" class="headerlink" title="em/rem/px单位"></a>em/rem/px单位</h3>
      <ul>
<li><p>em</p>
<p>  父元素的字体大小。em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。(1.3em—是其父嵌套字体大小的1.3倍。)</p>
</li>
<li><p>rem</p>
<p>  根元素的字体大小。</p>
</li>
<li><p>px</p>
<p>  px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
</search>
